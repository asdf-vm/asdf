import{_ as n,C as p,c as d,o,ag as e,j as i,a,G as l}from"./chunks/framework.CkHWihve.js";const L=JSON.parse('{"title":"创建插件","description":"","frontmatter":{},"headers":[],"relativePath":"zh-hans/plugins/create.md","filePath":"zh-hans/plugins/create.md","lastUpdated":1755823056000}'),h={name:"zh-hans/plugins/create.md"},r={tabindex:"0"},k={style:{"text-align":"left"}},g={style:{"text-align":"left"}},c={style:{"text-align":"left"}},u={style:{"text-align":"left"}},b={id:"bin-list-all",tabindex:"-1"},F={id:"bin-download",tabindex:"-1"},E={id:"bin-install",tabindex:"-1"},y={id:"bin-latest-stable",tabindex:"-1"},f={id:"asdf-命令行的扩展命令",tabindex:"-1"},m={id:"自定义垫片模板",tabindex:"-1"};function _(A,s,v,C,S,T){const t=p("Badge");return o(),d("div",null,[s[48]||(s[48]=e('<h1 id="创建插件" tabindex="-1">创建插件 <a class="header-anchor" href="#创建插件" aria-label="Permalink to &quot;创建插件&quot;">​</a></h1><p>插件是一个包含一些可执行脚本的 Git 存储库，用于支持对某种语言/工具进行版本控制。这些脚本由 asdf 通过命令运行，以支持诸如 <code>asdf list-all &lt;name&gt;</code>、<code>asdf install &lt;name&gt; &lt;version&gt;</code> 等功能。</p><h2 id="快速入门" tabindex="-1">快速入门 <a class="header-anchor" href="#快速入门" aria-label="Permalink to &quot;快速入门&quot;">​</a></h2><p>创建自己的插件有两种方式：</p><ol><li>使用 <a href="https://github.com/asdf-vm/asdf-plugin-template" target="_blank" rel="noreferrer">asdf-vm/asdf-plugin-template</a> 仓库来 <a href="https://github.com/asdf-vm/asdf-plugin-template/generate" target="_blank" rel="noreferrer">生成</a> 一个插件仓库（命名为 <code>asdf-&lt;tool_name&gt;</code>），其中已实现默认脚本。生成后，克隆该仓库并运行 <code>setup.bash</code> 脚本以交互式更新模版。</li><li>创建名为 <code>asdf-&lt;tool_name&gt;</code> 的仓库，并实现文档中列出的所需脚本。</li></ol><h3 id="插件脚本的黄金规则" tabindex="-1">插件脚本的黄金规则 <a class="header-anchor" href="#插件脚本的黄金规则" aria-label="Permalink to &quot;插件脚本的黄金规则&quot;">​</a></h3><ul><li>脚本<strong>不应</strong>调用其他 <code>asdf</code> 命令</li><li>保持 Shell 工具/命令的依赖列表简短</li><li>避免使用非便携式工具或命令标志。例如，<code>sort -V</code>。请参考 asdf 核心 <a href="https://github.com/asdf-vm/asdf/blob/master/test/banned_commands.bats" target="_blank" rel="noreferrer">禁止命令列表</a>。</li></ul><h2 id="脚本概述" tabindex="-1">脚本概述 <a class="header-anchor" href="#脚本概述" aria-label="Permalink to &quot;脚本概述&quot;">​</a></h2><p>可从 asdf 调用的所有脚本的完整列表。</p>',9)),i("table",r,[s[25]||(s[25]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"脚本"),i("th",{style:{"text-align":"left"}},"描述")])],-1)),i("tbody",null,[i("tr",null,[i("td",k,[s[0]||(s[0]=i("a",{href:"#bin-list-all"},"bin/list-all",-1)),s[1]||(s[1]=a()),l(t,{type:"tip",text:"必要",vertical:"middle"})]),s[2]||(s[2]=i("td",{style:{"text-align":"left"}},"列出所有可安装的版本",-1))]),i("tr",null,[i("td",g,[s[3]||(s[3]=i("a",{href:"#bin-download"},"bin/download",-1)),s[4]||(s[4]=a()),l(t,{type:"warning",text:"推荐",vertical:"middle"})]),s[5]||(s[5]=i("td",{style:{"text-align":"left"}},"下载指定版本的源代码或二进制文件",-1))]),i("tr",null,[i("td",c,[s[6]||(s[6]=i("a",{href:"#bin-install"},"bin/install",-1)),s[7]||(s[7]=a()),l(t,{type:"tip",text:"必要",vertical:"middle"})]),s[8]||(s[8]=i("td",{style:{"text-align":"left"}},"安装指定版本",-1))]),i("tr",null,[i("td",u,[s[9]||(s[9]=i("a",{href:"#bin-latest-stable"},"bin/latest-stable",-1)),s[10]||(s[10]=a()),l(t,{type:"warning",text:"推荐",vertical:"middle"})]),s[11]||(s[11]=i("td",{style:{"text-align":"left"}},"列出指定工具的最新稳定版本",-1))]),s[12]||(s[12]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-help.overview"},"bin/help.overview")]),i("td",{style:{"text-align":"left"}},"输出插件及工具的通用描述")],-1)),s[13]||(s[13]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-help.deps"},"bin/help.deps")]),i("td",{style:{"text-align":"left"}},"输出按操作系统分类的依赖项列表")],-1)),s[14]||(s[14]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-help.config"},"bin/help.config")]),i("td",{style:{"text-align":"left"}},"输出插件或工具的配置信息")],-1)),s[15]||(s[15]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-help.links"},"bin/help.links")]),i("td",{style:{"text-align":"left"}},"输出插件或工具的链接列表")],-1)),s[16]||(s[16]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-list-bin-paths"},"bin/list-bin-paths")]),i("td",{style:{"text-align":"left"}},"列出包含二进制文件的目录的相对路径以创建垫片")],-1)),s[17]||(s[17]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-exec-env"},"bin/exec-env")]),i("td",{style:{"text-align":"left"}},"为运行二进制文件准备环境")],-1)),s[18]||(s[18]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-exec-path"},"bin/exec-path")]),i("td",{style:{"text-align":"left"}},"输出工具某个版本的可执行路径")],-1)),s[19]||(s[19]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-uninstall"},"bin/uninstall")]),i("td",{style:{"text-align":"left"}},"卸载工具的特定版本Uninstall")],-1)),s[20]||(s[20]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-list-legacy-filenames"},"bin/list-legacy-filenames")]),i("td",{style:{"text-align":"left"}},[a("输出旧版本文件的文件名："),i("code",null,".ruby-version")])],-1)),s[21]||(s[21]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-parse-legacy-file"},"bin/parse-legacy-file")]),i("td",{style:{"text-align":"left"}},"用于解析旧版本文件的自定义解析器")],-1)),s[22]||(s[22]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-post-plugin-add"},"bin/post-plugin-add")]),i("td",{style:{"text-align":"left"}},"在插件添加后执行的钩子")],-1)),s[23]||(s[23]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-post-plugin-update"},"bin/post-plugin-update")]),i("td",{style:{"text-align":"left"}},"插件更新后执行的钩子")],-1)),s[24]||(s[24]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-pre-plugin-remove"},"bin/pre-plugin-remove")]),i("td",{style:{"text-align":"left"}},"插件删除前执行的钩子")],-1))])]),s[49]||(s[49]=e('<p>要查看哪些命令调用了哪些脚本，请参考每个脚本的详细文档。</p><h2 id="环境变量概述" tabindex="-1">环境变量概述 <a class="header-anchor" href="#环境变量概述" aria-label="Permalink to &quot;环境变量概述&quot;">​</a></h2><p>所有脚本中使用的环境变量完整列表。</p><table tabindex="0"><thead><tr><th style="text-align:left;">环境变量</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ASDF_INSTALL_TYPE</code></td><td style="text-align:left;"><code>version</code> 或 <code>ref</code></td></tr><tr><td style="text-align:left;"><code>ASDF_INSTALL_VERSION</code></td><td style="text-align:left;">完整版本号或 Git 引用，取决于 <code>ASDF_INSTALL_TYPE</code></td></tr><tr><td style="text-align:left;"><code>ASDF_INSTALL_PATH</code></td><td style="text-align:left;">工具 <em>应</em> 安装或 <em>已</em> 安装的路径</td></tr><tr><td style="text-align:left;"><code>ASDF_CONCURRENCY</code></td><td style="text-align:left;">编译源代码时使用的核心数。用于设置 <code>make -j</code></td></tr><tr><td style="text-align:left;"><code>ASDF_DOWNLOAD_PATH</code></td><td style="text-align:left;"><code>bin/download</code> 下载源代码或二进制文件的路径</td></tr><tr><td style="text-align:left;"><code>ASDF_PLUGIN_PATH</code></td><td style="text-align:left;">插件的安装路径</td></tr><tr><td style="text-align:left;"><code>ASDF_PLUGIN_SOURCE_URL</code></td><td style="text-align:left;">插件的来源 URL</td></tr><tr><td style="text-align:left;"><code>ASDF_PLUGIN_PREV_REF</code></td><td style="text-align:left;">插件仓库的上一版本 <code>git-ref</code></td></tr><tr><td style="text-align:left;"><code>ASDF_PLUGIN_POST_REF</code></td><td style="text-align:left;">插件仓库的更新版本 <code>git-ref</code></td></tr><tr><td style="text-align:left;"><code>ASDF_CMD_FILE</code></td><td style="text-align:left;">解析为被引用的文件的完整路径</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">注意</p><p><strong>并非所有环境变量在所有脚本中都可以用。</strong> 请查看下方每个脚本的文档，以了解其可用的环境变量。</p></div><h2 id="必要的脚本" tabindex="-1">必要的脚本 <a class="header-anchor" href="#必要的脚本" aria-label="Permalink to &quot;必要的脚本&quot;">​</a></h2>',6)),i("h3",b,[s[26]||(s[26]=i("code",null,"bin/list-all",-1)),s[27]||(s[27]=a()),l(t,{type:"tip",text:"必要",vertical:"middle"}),s[28]||(s[28]=a()),s[29]||(s[29]=i("a",{class:"header-anchor",href:"#bin-list-all","aria-label":'Permalink to "`bin/list-all` <Badge type="tip" text="必要" vertical="middle" />"'},"​",-1))]),s[50]||(s[50]=e('<p><strong>描述</strong></p><p>列出所有可安装的版本。</p><p><strong>输出格式</strong></p><p>必须打印一个以<strong>空格分隔</strong>的版本列表字符串。例如：</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1.0.1 1.0.2 1.3.0 1.4</span></span></code></pre></div><p>最新版本应放在最后。</p><p>asdf core 会将每个版本单独打印在单独的行上，可能导致部分版本超出屏幕范围。</p><p><strong>排序</strong></p><p>如果版本是从网站的发布页面获取的，建议保持提供的顺序，因为它们通常已经按正确顺序排列。如果版本顺序相反，通过 <code>tac</code> 管道处理应 能解决问题。</p><p>如果排序不可避免，<code>sort -V</code> 不可移植，因此我们建议：</p><ul><li><a href="https://github.com/asdf-vm/asdf-plugin-template/blob/main/template/lib/utils.bash" target="_blank" rel="noreferrer">使用 Git 的排序功能</a> （需要 Git &gt;= <code>v2.18.0</code>）</li><li><a href="https://github.com/vic/asdf-idris/blob/master/bin/list-all#L6" target="_blank" rel="noreferrer">编写自定义排序方法</a> （需要 <code>sed</code>、<code>sort</code> 和 <code>awk</code>）</li></ul><p><strong>脚本可用的环境变量</strong></p><p>此脚本未提供任何环境变量。</p><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf list all &lt;name&gt; [version]</code></li><li><code>asdf list all nodejs</code>：列出此脚本返回的所有版本，每个版本占一行。</li><li><code>asdf list all nodejs 18</code>：列出此脚本返回的所有版本，每个版本占一行，并应用过滤器匹配以 <code>18</code> 开头的任何版本。</li></ul><p><strong>asdf 核心调用签名</strong></p><p>未提供参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">“$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">{plugin_path}</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/list-all”</span></span></code></pre></div><hr>',19)),i("h3",F,[s[30]||(s[30]=i("code",null,"bin/download",-1)),s[31]||(s[31]=a()),l(t,{type:"tip",text:"必要",vertical:"middle"}),s[32]||(s[32]=a()),s[33]||(s[33]=i("a",{class:"header-anchor",href:"#bin-download","aria-label":'Permalink to "`bin/download` <Badge type="tip" text="必要" vertical="middle" />"'},"​",-1))]),s[51]||(s[51]=e('<p><strong>描述</strong></p><p>将特定版本的工具的源代码或二进制文件下载到指定位置。</p><p><strong>实现细节</strong></p><ul><li>脚本必须将源代码或二进制文件下载到由 <code>ASDF_DOWNLOAD_PATH</code> 指定的目录中。</li><li>仅应将解压后的源代码或二进制文件放置在 <code>ASDF_DOWNLOAD_PATH</code> 目录中。</li><li>失败时，不应将任何文件放置在 <code>ASDF_DOWNLOAD_PATH</code> 中。</li><li>成功时应以 <code>0</code> 退出。</li><li>失败时应以非零状态退出。</li></ul><p><strong>旧插件</strong></p><p>尽管此脚本被标记为所有插件的 <em>必需</em>，但对于在引入此脚本之前存在的“旧”插件，它是 <em>可选</em> 的。</p><p>如果此脚本缺失，asdf 将假设 <code>bin/install</code> 脚本存在，并会下载<strong>并</strong>安装该版本。</p><p>所有插件必须包含此脚本，因为对旧插件的支持最终将被移除。</p><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>：<code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>： <ul><li>如果 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。</li><li>如果 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li><li><code>ASDF_DOWNLOAD_PATH</code>：源代码或二进制文件的下载路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf install &lt;tool&gt; [version]]</code></li><li><code>asdf install &lt;tool&gt; latest[:version]</code></li><li><code>asdf install nodejs 18.0.0</code>：下载 Node.js 版本 <code>18.0.0</code> 的源代码或二进制文件， 并将它们放置在 <code>ASDF_DOWNLOAD_PATH</code> 目录中。然后运行 <code>bin/install</code> 脚本。</li></ul><p><strong>asdf 核心的调用签名</strong></p><p>未提供参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/download</span></span></code></pre></div><hr>',16)),i("h3",E,[s[34]||(s[34]=i("code",null,"bin/install",-1)),s[35]||(s[35]=a()),l(t,{type:"tip",text:"必要",vertical:"middle"}),s[36]||(s[36]=a()),s[37]||(s[37]=i("a",{class:"header-anchor",href:"#bin-install","aria-label":'Permalink to "`bin/install` <Badge type="tip" text="必要" vertical="middle" />"'},"​",-1))]),s[52]||(s[52]=e('<p><strong>描述</strong></p><p>将特定版本的工具安装到指定位置。</p><p><strong>实现细节</strong></p><ul><li>脚本应将指定版本安装到路径 <code>ASDF_INSTALL_PATH</code> 中。</li><li>默认情况下，<code>$ASDF_INSTALL_PATH/bin</code> 目录下的文件将自动垫片（shims）。此行为可通过可选的 <a href="#bin-list-bin-paths">bin/list-bin-paths</a> 脚本进行自定义。</li><li>成功应以 <code>0</code> 退出。</li><li>失败应以非零状态退出。</li><li>为避免 TOCTOU（Time-of-Check-to-Time-of-Use）问题，确保脚本仅在工具的构建和安装被视为成功后，才将文件放置在 <code>ASDF_INSTALL_PATH</code> 中。</li></ul><p><strong>旧插件</strong></p><p>如果 <code>bin/download</code> 脚本不存在，该脚本应下载并安装指定版本。</p><p>为了与 <code>0.7._</code> 之前和 <code>0.8._</code> 之后的 asdf 核心版本兼容，检查 <code>ASDF_DOWNLOAD_PATH</code> 环境变量的存在。如果设置了该变量，则假设 <code>bin/download</code> 脚本已下载该版本，否则在 <code>bin/install</code> 脚本中下载源代码。</p><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>：<code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>：</li><li>如果 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。 <ul><li>如果 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li><li><code>ASDF_CONCURRENCY</code>：编译源代码时使用的核心数。可用于设置如 <code>make -j</code> 之类的标志。</li><li><code>ASDF_DOWNLOAD_PATH</code>：源代码或二进制文件的下载路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf install</code></li><li><code>asdf install &lt;tool&gt;</code></li><li><code>asdf install &lt;tool&gt; [version]]</code></li><li><code>asdf install &lt;tool&gt; latest[:version]</code></li><li><code>asdf install nodejs 18.0.0</code>：在 <code>ASDF_INSTALL_PATH</code> 目录中安装 Node.js 版本 <code>18.0.0</code>。</li></ul><p><strong>asdf 核心的调用签名</strong></p><p>未提供参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/install</span></span></code></pre></div><h2 id="可选脚本" tabindex="-1">可选脚本 <a class="header-anchor" href="#可选脚本" aria-label="Permalink to &quot;可选脚本&quot;">​</a></h2>',15)),i("h3",y,[s[38]||(s[38]=i("code",null,"bin/latest-stable",-1)),s[39]||(s[39]=a()),l(t,{type:"warning",text:"推荐",vertical:"middle"}),s[40]||(s[40]=a()),s[41]||(s[41]=i("a",{class:"header-anchor",href:"#bin-latest-stable","aria-label":'Permalink to "`bin/latest-stable` <Badge type="warning" text="推荐" vertical="middle" />"'},"​",-1))]),s[53]||(s[53]=e('<p><strong>描述</strong></p><p>确定工具的最新稳定版本。如果不存在，asdf 核心将 <code>tail</code> <code>bin/list-all</code> 的输出，这可能是不希望看到的。</p><p><strong>实现细节</strong></p><ul><li>脚本应将工具的最新稳定版本打印到标准输出。</li><li>不稳定版本或发布候选版本应被省略。</li><li>脚本的第一个参数提供了一个过滤查询。这应用于按版本号或工具提供商过滤输出。 <ul><li>例如，来自 <a href="https://github.com/asdf-vm/asdf-ruby" target="_blank" rel="noreferrer">ruby 插件</a> 的 <code>asdf list all ruby</code> 输出列出了来自多个提供商的 Ruby 版本：<code>jruby</code>、<code>rbx</code> 和 <code>truffleruby</code> 等。用户提供的过滤器可由插件用于过滤语义化版本和/或提供商。<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt; asdf latest ruby</span></span>\n<span class="line"><span>3.2.2</span></span>\n<span class="line"><span>&gt; asdf latest ruby 2</span></span>\n<span class="line"><span>2.7.8</span></span>\n<span class="line"><span>&gt; asdf latest ruby truffleruby</span></span>\n<span class="line"><span>truffleruby+graalvm-22.3.1</span></span></code></pre></div></li></ul></li><li>成功应以 <code>0</code> 退出。</li><li>失败应以非零状态退出。</li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>：<code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>： <ul><li>若 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。</li><li>若 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf set &lt;tool&gt; latest</code>：将工具的版本设置为该工具的最新稳定版本。</li><li><code>asdf install &lt;tool&gt; latest</code>：安装工具的最新版本。</li><li><code>asdf latest &lt;tool&gt; [&lt;version&gt;]</code>：根据可选过滤器输出工具的最新版本。</li><li><code>asdf latest --all</code>：输出由 asdf 管理的所有工具的最新版本及其安装状态。</li></ul><p><strong>asdf 核心的调用签名</strong></p><p>该脚本应接受一个参数，即过滤查询。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/latest-stable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><hr><h3 id="bin-help-overview" tabindex="-1"><code>bin/help.overview</code> <a class="header-anchor" href="#bin-help-overview" aria-label="Permalink to &quot;`bin/help.overview`&quot;">​</a></h3><p><strong>描述</strong></p><p>输出关于插件和所管理工具的通用描述。</p><p><strong>实现细节</strong></p><ul><li>该脚本是显示插件帮助输出所必需的。</li><li>不得打印任何标题，因为 asdf 核心会打印标题。</li><li>输出可以是自由格式文本，但理想情况下应仅包含一个简短段落。</li><li>不得输出已在 asdf-vm 核心文档中涵盖的任何信息。</li><li>应根据所安装工具的操作系统和版本进行定制（可选设置环境变量 <code>ASDF_INSTALL_VERSION</code> 和 <code>ASDF_INSTALL_TYPE</code>）。</li><li>成功应以 <code>0</code> 退出。</li><li>失败应以非零状态退出。</li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>：<code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>： <ul><li>若 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。</li><li>若 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf help &lt;name&gt; [&lt;version&gt;]</code>：输出插件和工具的文档</li></ul><p><strong>asdf 核心的调用签名</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/help.overview</span></span></code></pre></div><hr><h3 id="bin-help-deps" tabindex="-1"><code>bin/help.deps</code> <a class="header-anchor" href="#bin-help-deps" aria-label="Permalink to &quot;`bin/help.deps`&quot;">​</a></h3><p><strong>描述</strong></p><p>输出针对操作系统定制的依赖项列表。每个依赖项占一行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span></span></code></pre></div><p><strong>实现细节</strong></p><ul><li>该脚本需要 <code>bin/help.overview</code> 才能被视为有效输出。</li><li>应根据操作系统和要安装的工具版本进行定制（可选设置环境变量 <code>ASDF_INSTALL_VERSION</code> 和 <code>ASDF_INSTALL_TYPE</code>）。</li><li>成功应以 <code>0</code> 退出。</li><li>失败应以非零状态退出。</li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>：<code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>： <ul><li>若 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。</li><li>若 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf help &lt;name&gt; [&lt;version&gt;]</code>：输出插件和工具的文档</li></ul><p><strong>asdf 核心的调用签名</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/help.deps</span></span></code></pre></div><hr><h3 id="bin-help-config" tabindex="-1"><code>bin/help.config</code> <a class="header-anchor" href="#bin-help-config" aria-label="Permalink to &quot;`bin/help.config`&quot;">​</a></h3><p><strong>描述</strong></p><p>输出插件和工具所需的任何必要或可选配置。例如，描述安装或编译工具所需的任何环境变量或其他标志。</p><p><strong>实现细节</strong></p><ul><li>该脚本需要 <code>bin/help.overview</code> 才能被视为有效输出。</li><li>输出可以是自由格式文本。</li><li>应根据所安装工具的操作系统和版本进行定制（可选设置环境变量 <code>ASDF_INSTALL_VERSION</code> 和 <code>ASDF_INSTALL_TYPE</code>）。</li><li>成功应以 <code>0</code> 退出。</li><li>失败应以非零状态退出。</li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>：<code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>： <ul><li>若 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。</li><li>若 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf help &lt;name&gt; [&lt;version&gt;]</code>：输出插件和工具的文档</li></ul><p><strong>asdf 核心的调用签名</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/help.config</span></span></code></pre></div><hr><h3 id="bin-help-links" tabindex="-1"><code>bin/help.links</code> <a class="header-anchor" href="#bin-help-links" aria-label="Permalink to &quot;`bin/help.links`&quot;">​</a></h3><p><strong>描述</strong></p><p>输出与插件和工具相关的链接列表。每个链接占一行。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Repository:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	https://github.com/vlang/v</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Documentation:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	https://vlang.io</span></span></code></pre></div><p><strong>实现细节</strong></p><ul><li>该脚本需要 <code>bin/help.overview</code> 才能被视为有效输出。</li><li>每行一个链接。</li><li>格式必须为以下之一： <ul><li><code>&lt;标题&gt;: &lt;链接&gt;</code></li><li>或仅 <code>&lt;链接&gt;</code></li></ul></li><li>应根据所安装工具的操作系统和版本进行调整（可选设置环境变量 <code>ASDF_INSTALL_VERSION</code> 和 <code>ASDF_INSTALL_TYPE</code>）。</li><li>成功应以 <code>0</code> 退出。</li><li>失败应以非零状态退出。</li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>：<code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>： <ul><li>若 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。</li><li>若 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf help &lt;name&gt; [&lt;version&gt;]</code>：输出插件和工具的文档</li></ul><p><strong>asdf 核心的调用签名</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/help.links</span></span></code></pre></div><hr><h3 id="bin-list-bin-paths" tabindex="-1"><code>bin/list-bin-paths</code> <a class="header-anchor" href="#bin-list-bin-paths" aria-label="Permalink to &quot;`bin/list-bin-paths`&quot;">​</a></h3><p><strong>描述</strong></p><p>列出包含指定版本工具可执行文件的目录。</p><p><strong>实现细节</strong></p><ul><li>如果该脚本不存在，asdf 将搜索 <code>“${ASDF_INSTALL_PATH}”/bin</code> 目录中的二进制文件并为其创建垫片。</li><li>输出包含可执行文件的路径列表，路径以空格分隔。</li><li>路径必须相对于 <code>ASDF_INSTALL_PATH</code>。示例输出如下：</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> veggies</span></span></code></pre></div><p>这将指示 asdf 为以下目录中的文件创建垫片：</p><ul><li><code>“${ASDF_INSTALL_PATH}”/bin</code></li><li><code>“${ASDF_INSTALL_PATH}”/tools</code></li><li><code>“${ASDF_INSTALL_PATH}”/veggies</code></li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>：<code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>：</li><li>若 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。 <ul><li>如果 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf install &lt;tool&gt; [version]</code>：初始创建二进制文件的垫片。</li><li><code>asdf reshim &lt;tool&gt; &lt;version&gt;</code>：重新创建二进制文件的垫片。</li></ul><p><strong>asdf 核心的调用签名</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/list-bin-paths&quot;</span></span></code></pre></div><hr><h3 id="bin-exec-env" tabindex="-1"><code>bin/exec-env</code> <a class="header-anchor" href="#bin-exec-env" aria-label="Permalink to &quot;`bin/exec-env`&quot;">​</a></h3><p><strong>描述</strong></p><p>在执行工具二进制文件的垫片之前，请先准备好环境。</p><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>:</li><li>如果 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。 <ul><li>如果 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf which &lt;command&gt;</code>：显示可执行文件的路径</li><li><code>asdf exec &lt;command&gt; [args...]</code>：执行当前版本的命令垫片</li><li><code>asdf env &lt;command&gt; [util]</code>：在命令垫片执行所用的环境中运行工具（默认：<code>env</code>）。</li></ul><p><strong>asdf 核心的调用签名</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/exec-env&quot;</span></span></code></pre></div><hr><h3 id="bin-exec-path" tabindex="-1"><code>bin/exec-path</code> <a class="header-anchor" href="#bin-exec-path" aria-label="Permalink to &quot;`bin/exec-path`&quot;">​</a></h3><p>获取指定版本工具的可执行文件路径。必须输出一个 包含相对可执行文件路径的字符串。这允许插件 在满足条件时覆盖 Shim 指定的可执行文件路径，否则返回 Shim 指定的默认路径。</p><p><strong>描述</strong></p><p>获取指定版本工具的可执行文件路径。</p><p><strong>实现细节</strong></p><ul><li>必须输出包含相对可执行文件路径的字符串。</li><li>条件性地覆盖shim指定的可执行文件路径，否则返回shim指定的默认路径。</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Usage:</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  plugin/bin/exec-path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">install-pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">comman</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">executable-pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Example</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Call:</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ~/.asdf/plugins/foo/bin/exec-path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;~/.asdf/installs/foo/1.0&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foo&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bin/foo&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Output:</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  bin/foox</span></span></code></pre></div><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>:</li><li>若 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。 <ul><li>如果 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li></ul><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf which &lt;command&gt;</code>：显示可执行文件的路径</li><li><code>asdf exec &lt;command&gt; [args...]</code>：执行当前版本的命令垫片</li><li><code>asdf env &lt;command&gt; [util]</code>：在命令垫片执行所用的环境中运行工具（默认：<code>env</code>）。</li></ul><p><strong>asdf 核心的调用签名</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/exec-path&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$install_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$relative_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><hr><h3 id="bin-uninstall" tabindex="-1"><code>bin/uninstall</code> <a class="header-anchor" href="#bin-uninstall" aria-label="Permalink to &quot;`bin/uninstall`&quot;">​</a></h3><p><strong>描述</strong></p><p>卸载提供的工具版本。</p><p><strong>输出格式</strong></p><p>输出应根据用户情况发送到 <code>stdout</code> 或 <code>stderr</code>。后续核心执行不会读取任何输出。</p><p><strong>脚本可用的环境变量</strong></p><p>此脚本未提供任何环境变量。</p><p><strong>调用此脚本的命令</strong></p><ul><li><code>asdf list all &lt;name&gt; &lt;version&gt;</code></li><li><code>asdf uninstall nodejs 18.15.0</code>：卸载 nodejs 的版本<code>18.15.0</code>，并移除所有垫片，包括通过<code>npm i -g</code>全局安装的垫片</li></ul><p><strong>asdf 核心的调用签名</strong></p><p>不提供参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/uninstall&quot;</span></span></code></pre></div><hr><h3 id="bin-list-legacy-filenames" tabindex="-1"><code>bin/list-legacy-filenames</code> <a class="header-anchor" href="#bin-list-legacy-filenames" aria-label="Permalink to &quot;`bin/list-legacy-filenames`&quot;">​</a></h3><p><strong>描述</strong></p><p>列出用于确定指定工具版本的旧配置文件名。</p><p><strong>实现细节</strong></p><ul><li>输出以空格分隔的文件名列表。</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  .ruby-version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .rvmrc</span></span></code></pre></div><ul><li>仅适用于在 <code>“${HOME}”/.asdfrc</code> 中启用了 <code>legacy_version_file</code> 选项的用户。</li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>：<code>version</code> 或 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>： <ul><li>若 <code>ASDF_INSTALL_TYPE=version</code>，则为完整版本号。</li><li>若 <code>ASDF_INSTALL_TYPE=ref</code>，则为 Git 引用（标签/提交/分支）。</li></ul></li><li><code>ASDF_INSTALL_PATH</code>：工具 <em>已</em> 安装或 <em>应</em> 安装的路径。</li></ul><p><strong>调用此脚本的命令</strong></p><p>任何读取工具版本的命令。</p><p><strong>asdf 核心的调用签名</strong></p><p>未提供参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/list-legacy-filenames&quot;</span></span></code></pre></div><hr><h3 id="bin-parse-legacy-file" tabindex="-1"><code>bin/parse-legacy-file</code> <a class="header-anchor" href="#bin-parse-legacy-file" aria-label="Permalink to &quot;`bin/parse-legacy-file`&quot;">​</a></h3><p><strong>描述</strong></p><p>解析由 asdf 找到的旧文件以确定工具的版本。适用于从 JavaScript 的 <code>package.json</code> 或 Go 的 <code>go.mod</code> 等文件中提取版本号。</p><p><strong>实现细节</strong></p><ul><li>如果不存在，asdf 将简单地使用 <code>cat</code> 命令读取旧文件以确定版本。</li><li>该过程应具有 <strong>确定性</strong>，并始终返回完全相同的版本： <ul><li>当解析同一旧文件时。</li><li>无论机器上安装了什么，或旧版本是否有效或完整。某些旧文件格式可能不适用。</li></ul></li><li>输出包含版本号的单行内容：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1.2.3</span></span></code></pre></div></li></ul><p><strong>脚本可用的环境变量</strong></p><p>在调用此脚本之前，没有专门设置的环境变量。</p><p><strong>调用此脚本的命令</strong></p><p>任何读取工具版本的命令。</p><p><strong>asdf 核心的调用签名</strong></p><p>该脚本应接受一个参数，即读取其内容的旧版文件的路径。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/parse-legacy-file&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$file_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><hr><h3 id="bin-post-plugin-add" tabindex="-1"><code>bin/post-plugin-add</code> <a class="header-anchor" href="#bin-post-plugin-add" aria-label="Permalink to &quot;`bin/post-plugin-add`&quot;">​</a></h3><p><strong>描述</strong></p><p>在使用 <code>asdf plugin add &lt;tool&gt;</code> 命令将插件添加到 asdf 之后，执行此回调脚本。</p><p>参见相关命令钩子：</p><ul><li><code>pre_asdf_plugin_add</code></li><li><code>pre_asdf_plugin_add_${plugin_name}</code></li><li><code>post_asdf_plugin_add</code></li><li><code>post_asdf_plugin_add_${plugin_name}</code></li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_PLUGIN_PATH</code>：插件的安装路径。</li><li><code>ASDF_PLUGIN_SOURCE_URL</code>：插件来源 URL。可以是本地目录路径。</li></ul><p><strong>asdf 核心的调用签名</strong></p><p>未提供参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/post-plugin-add&quot;</span></span></code></pre></div><hr><h3 id="bin-post-plugin-update" tabindex="-1"><code>bin/post-plugin-update</code> <a class="header-anchor" href="#bin-post-plugin-update" aria-label="Permalink to &quot;`bin/post-plugin-update`&quot;">​</a></h3><p><strong>描述</strong></p><p>在 asdf 使用 <code>asdf plugin update &lt;tool&gt; [&lt;git-ref&gt;]</code> 命令下载 <em>update</em> 插件<strong>之后</strong>，执行此回调脚本。</p><p>参见相关命令钩子：</p><ul><li><code>pre_asdf_plugin_update</code></li><li><code>pre_asdf_plugin_update_${plugin_name}</code></li><li><code>post_asdf_plugin_update</code></li><li><code>post_asdf_plugin_update_${plugin_name}</code></li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_PLUGIN_PATH</code>：插件的安装路径。</li><li><code>ASDF_PLUGIN_PREV_REF</code>：插件的上一版本 Git 引用。</li><li><code>ASDF_PLUGIN_POST_REF</code>：插件的更新后 Git 引用。</li></ul><p><strong>asdf 核心的调用签名</strong></p><p>未提供参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/post-plugin-update&quot;</span></span></code></pre></div><hr><h3 id="bin-pre-plugin-remove" tabindex="-1"><code>bin/pre-plugin-remove</code> <a class="header-anchor" href="#bin-pre-plugin-remove" aria-label="Permalink to &quot;`bin/pre-plugin-remove`&quot;">​</a></h3><p><strong>描述</strong></p><p>在使用 <code>asdf plugin remove &lt;工具&gt;</code> 命令移除插件<strong>之前</strong>，执行此回调脚本。</p><p>参见相关命令钩子：</p><ul><li><code>pre_asdf_plugin_remove</code></li><li><code>pre_asdf_plugin_remove_${plugin_name}</code></li><li><code>post_asdf_plugin_remove</code></li><li><code>post_asdf_plugin_remove_${plugin_name}</code></li></ul><p><strong>脚本可用的环境变量</strong></p><ul><li><code>ASDF_PLUGIN_PATH</code>：插件的安装路径。</li></ul><p><strong>asdf 核心的调用签名</strong></p><p>未提供参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/pre-plugin-remove&quot;</span></span></code></pre></div>',174)),i("h2",f,[s[42]||(s[42]=a("asdf 命令行的扩展命令 ")),l(t,{type:"danger",text:"进阶",vertical:"middle"}),s[43]||(s[43]=a()),s[44]||(s[44]=i("a",{class:"header-anchor",href:"#asdf-命令行的扩展命令","aria-label":'Permalink to "asdf 命令行的扩展命令 <Badge type="danger" text="进阶" vertical="middle" />"'},"​",-1))]),s[54]||(s[54]=e('<p>插件可以通过提供 <code>lib/commands/command*.bash</code> 脚本或者可执行程序来定义新的 asdf 命令，这些脚本或可执行程序将使用插件名称作为 asdf 命令的子命令进行调用。</p><p>例如，假设一个 <code>foo</code> 插件有以下文件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">foo/</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  lib/commands/</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.bash</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    command-bat.bash</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    command-bat-man.bash</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    command-help.bash</span></span></code></pre></div><p>用户现在可以执行：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # 等同于运行 `$ASDF_DATA_DIR/plugins/foo/lib/commands/command.bash`</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bar</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # 等同于运行 `$ASDF_DATA_DIR/plugins/foo/lib/commands/command.bash bar`</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 等同于运行 `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-help.bash`</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> man</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 等同于运行 `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat-man.bash`</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> baz</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 等同于运行 `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat.bash baz`</span></span></code></pre></div><p>插件作者可以使用此功能来提供与其工具相关的实用命令，或者可以创建 asdf 本身的新命令扩展的插件。</p><p>如果可执行位被设置，脚本将被执行，替换 asdf 的执行。</p><p>如果可执行位未被设置，asdf 将把脚本作为 Bash 脚本加载。</p><p><code>$ASDF_CMD_FILE</code> 解析为正在加载的文件的完整路径。</p><p>这个功能的一个很好的例子是像 <a href="https://github.com/asdf-community/asdf-haxe" target="_blank" rel="noreferrer"><code>haxe</code></a> 这样的插件。 它提供了 <code>asdf haxe neko-dylibs-link</code> 来修复 haxe 可执行文件期望找到相对于可执行目录的动态链接库的问题。</p><p>如果你的插件提供了 asdf 扩展命令，请务必在插件的 README 文件中提及。</p>',11)),i("h2",m,[s[45]||(s[45]=a("自定义垫片模板 ")),l(t,{type:"danger",text:"进阶",vertical:"middle"}),s[46]||(s[46]=a()),s[47]||(s[47]=i("a",{class:"header-anchor",href:"#自定义垫片模板","aria-label":'Permalink to "自定义垫片模板 <Badge type="danger" text="进阶" vertical="middle" />"'},"​",-1))]),s[55]||(s[55]=e(`<div class="warning custom-block"><p class="custom-block-title">警告</p><p>请仅在<strong>真的需要</strong>时才使用此功能</p></div><p>asdf 允许自定义垫片模板。对于名为 <code>foo</code> 的可执行程序，如果有一个 <code>shims/foo</code> 的文件在插件中，那么 asdf 将复制这个文件替代使用标准垫片模板。</p><p><strong>这必须谨慎使用。</strong></p><p>据 asdf 核心团队所知，此功能仅在官方 <a href="https://github.com/asdf-vm/asdf-elixir" target="_blank" rel="noreferrer">Elixir 插件</a> 中使用。这是 因为可执行文件不仅被视为可执行文件，还被视为 Elixir 文件。这使得无法使用标准的 Bash 垫片。</p><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><p><code>asdf</code> 包含 <code>plugin-test</code> 命令用于测试插件：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">plugin-nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">plugin-ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--asdf-tool-version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--asdf-plugin-gitref </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git-re</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [test-command*]</span></span></code></pre></div><ul><li><code>&lt;plugin_name&gt;</code> 和 <code>&lt;plugin_url&gt;</code> 是必需的</li><li>如果指定了可选参数 <code>[--asdf-tool-version &lt;version&gt;]</code>，工具将以该特定版本进行安装。默认值为 <code>asdf latest &lt;plugin_name&gt;</code></li><li>如果指定了可选参数 <code>[--asdf-plugin-gitref &lt;git_ref&gt;]</code>，插件本身将从指定的提交/分支/标签检出。这在测试插件的 CI 中的拉取请求时非常有用。默认使用插件仓库的默认分支。</li><li>可选参数 <code>[test_command...]</code> 是用于验证已安装工具是否正常工作的命令。通常为 <code>&lt;tool&gt; --version</code> 或 <code>&lt;tool&gt; --help</code>。例如，要测试 NodeJS 插件，我们可以运行<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># asdf plugin test &lt;plugin_name&gt;  &lt;plugin_url&gt;                               [test_command]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         https://github.com/asdf-vm/asdf-nodejs.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div></li></ul><div class="tip custom-block"><p class="custom-block-title">注意</p><p>我们强烈建议你在 CI 环境中测试你的插件，并确保它可以在 Linux 和 OSX 上运行。</p></div><h3 id="github-action" tabindex="-1">GitHub Action <a class="header-anchor" href="#github-action" aria-label="Permalink to &quot;GitHub Action&quot;">​</a></h3><p><a href="https://github.com/asdf-vm/actions" target="_blank" rel="noreferrer">asdf-vm/actions</a> 仓库提供了一个 GitHub Action，用于测试托管在 GitHub 上的插件。一个示例 <code>.github/workflows/test.yaml</code> Actions 工作流如下：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Test</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  pull_request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  plugin_test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">asdf plugin test</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        os</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">macos-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ matrix.os }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">asdf_plugin_test</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">asdf-vm/actions/plugin-test@v2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;MY_TOOL&gt; --version&quot;</span></span></code></pre></div><h4 id="travisci-配置示例" tabindex="-1">TravisCI 配置示例 <a class="header-anchor" href="#travisci-配置示例" aria-label="Permalink to &quot;TravisCI 配置示例&quot;">​</a></h4><p>这是一个 <code>.travis.yml</code> 示例文件，请根据你的需要进行自定义：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">language</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">c</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">asdf plugin test &lt;MY_TOOL&gt; $TRAVIS_BUILD_DIR &#39;&lt;MY_TOOL&gt; --version&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">before_script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git clone https://github.com/asdf-vm/asdf.git asdf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">. asdf/asdf.sh</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">os</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">linux</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">osx</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">注意</p><p>当使用其他 CI 时，可能需要传递插件位置的相对路径：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tool_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;tool_command&gt; --version&#39;</span></span></code></pre></div></div><h2 id="api-频率限制" tabindex="-1">API 频率限制 <a class="header-anchor" href="#api-频率限制" aria-label="Permalink to &quot;API 频率限制&quot;">​</a></h2><p>如果某个命令依赖于访问外部 API，例如 <code>bin/list-all</code> 或 <code>bin/latest-stable</code>，那么在自动化测试过程中可能会遇到频率限制问题。为了解决这个问题，请确保存在一条代码路径，通过环境变量提供认证令牌。例如：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;curl -s&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$GITHUB_API_TOKEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -H &#39;Authorization: token </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$GITHUB_API_TOKEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $releases_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h3 id="github-api-token" tabindex="-1"><code>GITHUB_API_TOKEN</code> <a class="header-anchor" href="#github-api-token" aria-label="Permalink to &quot;\`GITHUB_API_TOKEN\`&quot;">​</a></h3><p>要使用 <code>GITHUB_API_TOKEN</code>，请创建一个 <a href="https://github.com/settings/tokens/new" target="_blank" rel="noreferrer">新个人令牌</a>，仅授予 <code>public_repo</code> 访问权限。</p><p>然后将此令牌添加到 CI 管道的环境变量中。</p><div class="tip custom-block"><p class="custom-block-title">注意</p><p><strong>切勿</strong>将认证令牌发布到代码仓库中</p></div><h2 id="插件缩写索引" tabindex="-1">插件缩写索引 <a class="header-anchor" href="#插件缩写索引" aria-label="Permalink to &quot;插件缩写索引&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">注意</p><p>插件的推荐安装方法是通过直接 URL 安装：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># asdf plugin add &lt;name&gt; &lt;git_url&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/asdf-vm/asdf-nodejs</span></span></code></pre></div></div><p>如果未提供 <code>git_url</code>，asdf 将使用 <a href="https://github.com/asdf-vm/asdf-plugins" target="_blank" rel="noreferrer">缩写索引仓库</a> 来确定要使用的确切 <code>git_url</code>。</p><p>您可以通过遵循该仓库中的 <a href="https://github.com/asdf-vm/asdf-plugins" target="_blank" rel="noreferrer">缩写索引</a> 中的说明，将你的插件添加到缩写索引中。</p>`,27))])}const x=n(h,[["render",_]]);export{L as __pageData,x as default};
