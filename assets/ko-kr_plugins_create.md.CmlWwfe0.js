import{_ as n,C as p,c as d,o,ag as e,j as i,a,G as l}from"./chunks/framework.CkHWihve.js";const L=JSON.parse('{"title":"플러그인 생성하기","description":"","frontmatter":{},"headers":[],"relativePath":"ko-kr/plugins/create.md","filePath":"ko-kr/plugins/create.md","lastUpdated":1739299082000}'),h={name:"ko-kr/plugins/create.md"},r={tabindex:"0"},k={style:{"text-align":"left"}},g={style:{"text-align":"left"}},c={style:{"text-align":"left"}},u={style:{"text-align":"left"}},b={id:"bin-list-all",tabindex:"-1"},F={id:"bin-download",tabindex:"-1"},E={id:"bin-install",tabindex:"-1"},y={id:"bin-latest-stable",tabindex:"-1"},m={id:"asdf-cli-확장-명령어",tabindex:"-1"},f={id:"맞춤-shim-템플릿",tabindex:"-1"};function _(A,s,v,C,S,T){const t=p("Badge");return o(),d("div",null,[s[48]||(s[48]=e('<h1 id="플러그인-생성하기" tabindex="-1">플러그인 생성하기 <a class="header-anchor" href="#플러그인-생성하기" aria-label="Permalink to &quot;플러그인 생성하기&quot;">​</a></h1><p>플러그인은 언어 / 툴의 버전 관리를 지원하는 실행 가능한 스크립트들이 있는 Git 리포지토리입니다. 이 스크립트들은 asdf에 의해 특정 명령어들을 받아 <code>asdf list-all &lt;name&gt;</code>, <code>asdf install &lt;name&gt; &lt;version&gt;</code> 등의 지원을 위해 실행됩니다.</p><h2 id="빠른-시작" tabindex="-1">빠른 시작 <a class="header-anchor" href="#빠른-시작" aria-label="Permalink to &quot;빠른 시작&quot;">​</a></h2><p>자체 플러그인을 만드는 것을 시작하는 두 가지 옵션이 있습니다:</p><ol><li><a href="https://github.com/asdf-vm/asdf-plugin-template" target="_blank" rel="noreferrer">asdf-vm/asdf-plugin-template</a> 리포지토리 사용해서 기본 스크립트가 구현된 (<code>asdf-&lt;tool_name&gt;</code> 이름으로) 플러그인 리포지토리 <a href="https://github.com/asdf-vm/asdf-plugin-template/generate" target="_blank" rel="noreferrer">생성하기</a>. 리포지토리가 생성되면, 그 리포지토리를 clone하고 템플릿을 유기적으로 업데이트하여 <code>setup.bash</code> 스크립트를 실행합니다.</li><li><code>asdf-&lt;tool_name&gt;</code>로 이룸 붙인 리포지토리를 시작하고 아래 문서에 필수 스크립트들을 구현하세요.</li></ol><h3 id="플리그인-스크립트들을-위한-황금률" tabindex="-1">플리그인 스크립트들을 위한 황금률 <a class="header-anchor" href="#플리그인-스크립트들을-위한-황금률" aria-label="Permalink to &quot;플리그인 스크립트들을 위한 황금률&quot;">​</a></h3><ul><li>스크립트는 다른 <code>asdf</code> 명령어를 호출하면 <strong>안됩니다</strong>.</li><li>셸 툴/명령어의 dependency를 최소로 유지하세요.</li><li>non-portable 툴이나 명령어 플래그의 사용을 피하세요. 예를 들어, <code>sort -V</code>. asdf core를 참고하세요 <a href="https://github.com/asdf-vm/asdf/blob/master/test/banned_commands.bats" target="_blank" rel="noreferrer">금지된 명령어 목록</a></li></ul><h2 id="스크립트-개요" tabindex="-1">스크립트 개요 <a class="header-anchor" href="#스크립트-개요" aria-label="Permalink to &quot;스크립트 개요&quot;">​</a></h2><p>asdf에서 호출 가능한 스크립트의 전체 목록입니다.</p>',9)),i("table",r,[s[25]||(s[25]=i("thead",null,[i("tr",null,[i("th",{style:{"text-align":"left"}},"스크립트"),i("th",{style:{"text-align":"left"}},"설명")])],-1)),i("tbody",null,[i("tr",null,[i("td",k,[s[0]||(s[0]=i("a",{href:"#bin-list-all"},"bin/list-all",-1)),s[1]||(s[1]=a()),l(t,{type:"tip",text:"필수",vertical:"middle"})]),s[2]||(s[2]=i("td",{style:{"text-align":"left"}},"모든 설치 가능한 버전들을 나열",-1))]),i("tr",null,[i("td",g,[s[3]||(s[3]=i("a",{href:"#bin-download"},"bin/download",-1)),s[4]||(s[4]=a()),l(t,{type:"tip",text:"필수",vertical:"middle"})]),s[5]||(s[5]=i("td",{style:{"text-align":"left"}},"지정한 버전에 대한 소스 코드 또는 바이너리 다운로드",-1))]),i("tr",null,[i("td",c,[s[6]||(s[6]=i("a",{href:"#bin-install"},"bin/install",-1)),s[7]||(s[7]=a()),l(t,{type:"tip",text:"필수",vertical:"middle"})]),s[8]||(s[8]=i("td",{style:{"text-align":"left"}},"지정된 버전을 설치",-1))]),i("tr",null,[i("td",u,[s[9]||(s[9]=i("a",{href:"#bin-latest-stable"},"bin/latest-stable",-1)),s[10]||(s[10]=a()),l(t,{type:"warning",text:"추천",vertical:"middle"})]),s[11]||(s[11]=i("td",{style:{"text-align":"left"}},"지정된 도구의 최신 안정 버전 나열",-1))]),s[12]||(s[12]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-help.overview"},"bin/help.overview")]),i("td",{style:{"text-align":"left"}},"플러그인 및 도구에 대한 일반적인 설명을 출력")],-1)),s[13]||(s[13]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-help.deps"},"bin/help.deps")]),i("td",{style:{"text-align":"left"}},"운영 체제별 dependencies 목록 출력")],-1)),s[14]||(s[14]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-help.config"},"bin/help.config")]),i("td",{style:{"text-align":"left"}},"플러그인 및 툴 설정 정보 출력")],-1)),s[15]||(s[15]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-help.links"},"bin/help.links")]),i("td",{style:{"text-align":"left"}},"플러그인 및 툴에 대한 링크 목록 출력")],-1)),s[16]||(s[16]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-list-bin-paths"},"bin/list-bin-paths")]),i("td",{style:{"text-align":"left"}},"shim들을 생성하기 위해 바이너리 파일이 있는 디렉토리에 대한 상대 경로 나열")],-1)),s[17]||(s[17]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-exec-env"},"bin/exec-env")]),i("td",{style:{"text-align":"left"}},"바이너리 실행을 위한 환경 준비")],-1)),s[18]||(s[18]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-exec-path"},"bin/exec-path")]),i("td",{style:{"text-align":"left"}},"툴 버전의 실행파일 경로 출력")],-1)),s[19]||(s[19]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-uninstall"},"bin/uninstall")]),i("td",{style:{"text-align":"left"}},"툴의 특정 버전 제거")],-1)),s[20]||(s[20]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-list-legacy-filenames"},"bin/list-legacy-filenames")]),i("td",{style:{"text-align":"left"}},[a("레거시 버전 파일의 이름 출력: "),i("code",null,".ruby-version")])],-1)),s[21]||(s[21]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-parse-legacy-file"},"bin/parse-legacy-file")]),i("td",{style:{"text-align":"left"}},"레거시 버전 파일들을 위한 맞춤 parser")],-1)),s[22]||(s[22]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-post-plugin-add"},"bin/post-plugin-add")]),i("td",{style:{"text-align":"left"}},"플러그인이 추가된 후 실행될 훅")],-1)),s[23]||(s[23]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-post-plugin-update"},"bin/post-plugin-update")]),i("td",{style:{"text-align":"left"}},"플러그인이 업데이트 된 후 실행될 훅")],-1)),s[24]||(s[24]=i("tr",null,[i("td",{style:{"text-align":"left"}},[i("a",{href:"#bin-pre-plugin-remove"},"bin/pre-plugin-remove")]),i("td",{style:{"text-align":"left"}},"플러그인이 제거되기 전 실행될 훅")],-1))])]),s[49]||(s[49]=e('<p>어떤 명령어가 어떤 스크립트를 호출하는지 확인하려면, 각 스크립트에 대한 자세한 문서를 참조하세요.</p><h2 id="환경-변수-개요" tabindex="-1">환경 변수 개요 <a class="header-anchor" href="#환경-변수-개요" aria-label="Permalink to &quot;환경 변수 개요&quot;">​</a></h2><p>모든 스크립트에서 사용되는 환경 변수의 전체 목록입니다.</p><table tabindex="0"><thead><tr><th style="text-align:left;">환경 변수</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;"><code>ASDF_INSTALL_TYPE</code></td><td style="text-align:left;"><code>version</code> 또는 <code>ref</code></td></tr><tr><td style="text-align:left;"><code>ASDF_INSTALL_VERSION</code></td><td style="text-align:left;"><code>ASDF_INSTALL_TYPE</code>에 따른 풀 버전 번호 또는 Git Ref</td></tr><tr><td style="text-align:left;"><code>ASDF_INSTALL_PATH</code></td><td style="text-align:left;">툴이 설치 <em>되어야하는</em> 혹은 <em>되어있는</em> 경로</td></tr><tr><td style="text-align:left;"><code>ASDF_CONCURRENCY</code></td><td style="text-align:left;">소스 코드를 컴파일할 때 사용할 코어 수. <code>make-j</code>를 설정할 때 유용</td></tr><tr><td style="text-align:left;"><code>ASDF_DOWNLOAD_PATH</code></td><td style="text-align:left;"><code>bin/download</code>에 의해 소스 코드 또는 바이너리가 다운로드 된 경로</td></tr><tr><td style="text-align:left;"><code>ASDF_PLUGIN_PATH</code></td><td style="text-align:left;">플러그인이 설치된 경로</td></tr><tr><td style="text-align:left;"><code>ASDF_PLUGIN_SOURCE_URL</code></td><td style="text-align:left;">플러그인의 소스 URL</td></tr><tr><td style="text-align:left;"><code>ASDF_PLUGIN_PREV_REF</code></td><td style="text-align:left;">플러그인 리포지토리의 이전 <code>git-ref</code></td></tr><tr><td style="text-align:left;"><code>ASDF_PLUGIN_POST_REF</code></td><td style="text-align:left;">플러그인 리포지토리의 업데이트 된 <code>git-ref</code></td></tr><tr><td style="text-align:left;"><code>ASDF_CMD_FILE</code></td><td style="text-align:left;">source 되는 파일의 전체 경로를 해결</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">노트</p><p><strong>모든 스크립트에서 모든 환경 변수를 사용할 수 있는 것은 아닙니다.</strong> 아래 각 스크립트에 대한 문서를 확인하여 사용할 수 있는 환경 변수들을 확인하세요.</p></div><h2 id="필수적-스크립트" tabindex="-1">필수적 스크립트 <a class="header-anchor" href="#필수적-스크립트" aria-label="Permalink to &quot;필수적 스크립트&quot;">​</a></h2>',6)),i("h3",b,[s[26]||(s[26]=i("code",null,"bin/list-all",-1)),s[27]||(s[27]=a()),l(t,{type:"tip",text:"필수",vertical:"middle"}),s[28]||(s[28]=a()),s[29]||(s[29]=i("a",{class:"header-anchor",href:"#bin-list-all","aria-label":'Permalink to "`bin/list-all` <Badge type="tip" text="필수" vertical="middle" />"'},"​",-1))]),s[50]||(s[50]=e('<p><strong>설명</strong></p><p>설치 가능한 모든 버전 나열.</p><p><strong>출력 형식</strong></p><p><strong>공백으로 구분된</strong> 문자열을 반드시 출력. 예를 들어:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1.0.1 1.0.2 1.3.0 1.4</span></span></code></pre></div><p>최신 버전이 마지막에 와야 합니다.</p><p>asdf core는 각 버전을 각각의 행에 출력하여, 일부 버전을 화면 밖으로 밀어낼 가능성이 있습니다.</p><p><strong>정렬</strong></p><p>웹사이트의 릴리스 페이지에서 버전을 가져오는 경우에는 이미 올바른 순서로 되어 있는 경우가 많기 때문에 제공된 순서대로 두는 것이 좋습니다. 역순으로 되어 있는 경우 <code>tac</code>을 통해 해당 버전들을 바로 잡는것으로 충분합니다.</p><p>정렬이 불가피한 경우, <code>sort -V</code>는 사용이 불가능하므로, 다음 중 하나를 제안합니다:</p><ul><li><a href="https://github.com/asdf-vm/asdf-plugin-template/blob/main/template/lib/utils.bash" target="_blank" rel="noreferrer">Git 정렬 기능 사용</a> (Git <code>v2.18.0</code> 이상 필요)</li><li><a href="https://github.com/vic/asdf-idris/blob/master/bin/list-all#L6" target="_blank" rel="noreferrer">맞춤 정렬 함수 작성</a> (<code>sed</code>, <code>sort</code> &amp; <code>awk</code> 필요)</li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><p>이 스크립트에는 환경 변수가 제공되지 않습니다.</p><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf list all &lt;name&gt; [version]</code></li><li><code>asdf list all nodejs</code>: 이 스크립트에 의해 반환된 모든 버전을 나열합니다, 한 행에 한개씩.</li><li><code>asdf list all nodejs 18</code>: 이 스크립트에 의해 반환된 모든 버전을 나열하며, 각 행에 하나씩, <code>18</code>로 시작하는 모든 버전에 필터가 적용됩니다.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><p>제공되는 매개변수는 없습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/list-all&quot;</span></span></code></pre></div><hr>',19)),i("h3",F,[s[30]||(s[30]=i("code",null,"bin/download",-1)),s[31]||(s[31]=a()),l(t,{type:"tip",text:"필수",vertical:"middle"}),s[32]||(s[32]=a()),s[33]||(s[33]=i("a",{class:"header-anchor",href:"#bin-download","aria-label":'Permalink to "`bin/download` <Badge type="tip" text="필수" vertical="middle" />"'},"​",-1))]),s[51]||(s[51]=e('<p><strong>설명</strong></p><p>지정된 장소에 지정된 버전에 대한 소스 코드 또는 바이너리 다운로드</p><p><strong>구현 세부사항</strong></p><ul><li>스크립트는 소스 또는 바이너리를 <code>ASDF_DOWNLOAD_PATH</code>에서 지정된 디렉토리에 다운로드해야합니다.</li><li>압축 해제된 소스 코드 또는 바이너리만 <code>ASDF_DOWNLOAD_PATH</code> 디렉토리에 위치해야합니다.</li><li>실패 시에는 <code>ASDF_DOLOAD_PATH</code>에 어떠한 파일도 남아서는 안 됩니다.</li><li>성공 시에는 <code>0</code>이 종료 코드입니다.</li><li>실패 시에는 0이 아닌 상태의 종료 코드입니다.</li></ul><p><strong>레거시 플러그인</strong></p><p>비록 이 스크립트는 모든 플러그인에서 _필수_로 되어 있지만, 이 스크립트가 도입되기 이전의 &quot;레거시&quot; 플러그인에서는 <em>선택</em> 입니다.</p><p>이 스크립트가 없는 경우, asdf는 <code>bin/install</code> 스크립트가 있다고 가정하고 해당 버전을 다운로드 <strong>그리고</strong> 설치합니다.</p><p>레거시 플러그인 지원은 최종적으로 제거될 예정이기 때문에 앞으로 작성할 모든 플러그인에서 이 스크립트를 포함해야합니다.</p><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li><li><code>ASDF_DOWNLOAD_PATH</code>: 소스 코드 또는 바이너리 파일이 다운로드 된 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf install &lt;tool&gt; [version]</code></li><li><code>asdf install &lt;tool&gt; latest[:version]</code></li><li><code>asdf install nodejs 18.0.0</code>: Node.js 버전 <code>18.0.0</code>의 소스 코드 또는 바이너리를 다운로드하고 <code>ASDF_DOWNLOAD_PATH</code> 디렉토리에 저장. 그 다음 <code>bin/install</code> 스크립트를 실행.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><p>제공되는 매개변수는 없습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/download</span></span></code></pre></div><hr>',16)),i("h3",E,[s[34]||(s[34]=i("code",null,"bin/install",-1)),s[35]||(s[35]=a()),l(t,{type:"tip",text:"필수",vertical:"middle"}),s[36]||(s[36]=a()),s[37]||(s[37]=i("a",{class:"header-anchor",href:"#bin-install","aria-label":'Permalink to "`bin/install` <Badge type="tip" text="필수" vertical="middle" />"'},"​",-1))]),s[52]||(s[52]=e('<p><strong>설명</strong></p><p>특정 버전의 도구를 지정된 위치에 설치.</p><p><strong>구현 세부사항</strong></p><ul><li>스크립트는 <code>ASDF_INSTALL_PATH</code> 경로에 지정된 버전을 설치해야합니다.</li><li>Shim은 <code>$ASDF_INSTALL_PATH/bin</code>에 있는 어떠한 파일에 대해서든 기본적으로 생성됩니다. 이 동작은 선택적 <a href="#binlist-bin-paths">bin/list-bin-paths</a> 스크립트로 맞춤 설정 가능합니다.</li><li>성공 시에는 <code>0</code>이 종료 코드입니다.</li><li>실패 시에는 0이 아닌 상태의 종료 코드입니다.</li><li>TOCTOU(Time-of-Check-to-Off-Use) 문제를 방지하려면, 툴의 빌드 및 설치가 성공적이라고 판단될때만 스크립트에서 파일을 <code>ASDF_INSTALL_PATH</code>에 배치합니다.</li></ul><p><strong>레거시 플러그인</strong></p><p><code>bin/download</code> 스크립트가 없는 경우, 이 스크립트는 지정된 버전을 다운로드 <strong>그리고</strong> 설치해야합니다.</p><p><code>0.7._</code>보다 이전 그리고 <code>0.8._</code>보다 이후 asdf 코어 버전들의 호환성을 확인하려면, <code>ASDF_DOWNLOAD_PATH</code> 환경 변수가 있는지 확인합니다. 그 환경 변수가 존재하는 경우, 이미 <code>bin/download</code> 스크립트가 그 버전을 다운로드했다고 가정하고, 존재하지 않으면 <code>bin/install</code> 스크립트에서 소스 코드를 다운로드합니다.</p><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li><li><code>ASDF_CONCURRENCY</code>: 소스 코드를 컴파일할 때 사용할 코어 수. <code>make-j</code>를 설정할 때 유용.</li><li><code>ASDF_DOWNLOAD_PATH</code>: 소스 코드 또는 바이너리 파일이 다운로드 된 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf install</code></li><li><code>asdf install &lt;tool&gt;</code></li><li><code>asdf install &lt;tool&gt; [version]</code></li><li><code>asdf install &lt;tool&gt; latest[:version]</code></li><li><code>asdf install nodejs 18.0.0</code>: Node.js 버전 <code>18.0.0</code>을 <code>ASDF_INSTALL_PATH</code> 디렉토리에 설치.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><p>제공되는 매개변수는 없습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/install</span></span></code></pre></div><h2 id="선택적-스크립트" tabindex="-1">선택적 스크립트 <a class="header-anchor" href="#선택적-스크립트" aria-label="Permalink to &quot;선택적 스크립트&quot;">​</a></h2>',15)),i("h3",y,[s[38]||(s[38]=i("code",null,"bin/latest-stable",-1)),s[39]||(s[39]=a()),l(t,{type:"warning",text:"추천",vertical:"middle"}),s[40]||(s[40]=a()),s[41]||(s[41]=i("a",{class:"header-anchor",href:"#bin-latest-stable","aria-label":'Permalink to "`bin/latest-stable` <Badge type="warning" text="추천" vertical="middle" />"'},"​",-1))]),s[53]||(s[53]=e('<p><strong>설명</strong></p><p>도구의 최신 안정 버전을 결정합니다. 이 스크립트가 존재하지 않는 경우, asdf 코어는 <code>bin/list-all</code>의 출력을 비의도적으로 <code>tail</code>합니다.</p><p><strong>구현 세부사항</strong></p><ul><li>스크립트는 도구의 최신 안정 버전을 표준 출력에 출력해야합니다.</li><li>비안정판이나 릴리스 후보판은 제외되어야 합니다.</li><li>필터 쿼리는 스크립트의 첫 번째 인수로 제공됩니다 이 쿼리는 버전 번호나 툴 제공자에 의한 출력값을 필터하기 위해 사용되어야 합니다. <ul><li>예를 들어 <a href="https://github.com/asdf-vm/asdf-ruby" target="_blank" rel="noreferrer">ruby 플러그인</a>에서의 <code>asdf list all ruby</code>는 <code>jruby</code>, <code>rbx</code>, <code>truffleruby</code> 등의 많은 제공자들의 Ruby 버전 목록을 출력합니다. 사용자가 제공한 필터는 플러그인이 유의적 버전 및/또는 공급자를 필터링하는 데 사용될 수 있습니다.<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>&gt; asdf latest ruby</span></span>\n<span class="line"><span>3.2.2</span></span>\n<span class="line"><span>&gt; asdf latest ruby 2</span></span>\n<span class="line"><span>2.7.8</span></span>\n<span class="line"><span>&gt; asdf latest ruby truffleruby</span></span>\n<span class="line"><span>truffleruby+graalvm-22.3.1</span></span></code></pre></div></li></ul></li><li>성공 시에는 <code>0</code>이 종료 코드입니다.</li><li>실패 시에는 0이 아닌 상태의 종료 코드입니다.</li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf global &lt;tool&gt; latest</code>: 툴의 글로벌 버전을 해당 툴의 최신 안정 버전으로 설정합니다.</li><li><code>asdf local &lt;name&gt; latest</code>: 툴의 로컬 버전을 해당 툴의 최신 안정 버전으로 설정합니다.</li><li><code>asdf install &lt;tool&gt; latest</code>: 최신 버전의 툴을 설치합니다.</li><li><code>asdf latest &lt;tool&gt; [&lt;version&gt;]</code>: 선택적인 필터를 기반으로 도구의 최신 버전을 출력합니다.</li><li><code>asdf latest --all</code>: asdf에서 관리하는 모든 툴의 최신 버전과 설치 여부를 출력합니다.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><p>이 스크립트는 필터 쿼리라는 하나의 인수를 받습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/latest-stable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$query</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><hr><h3 id="bin-help-overview" tabindex="-1"><code>bin/help.overview</code> <a class="header-anchor" href="#bin-help-overview" aria-label="Permalink to &quot;`bin/help.overview`&quot;">​</a></h3><p><strong>설명</strong></p><p>플러그인 및 관리 중인 툴에 대한 일반적인 설명을 출력.</p><p><strong>구현 세부사항</strong></p><ul><li>플러그인에 대한 도움말 출력을 표시하려면 이 스크립트가 필요합니다.</li><li>asdf 코어가 머리말를 인쇄하므로 머리말을 출력해서는 안 됩니다.</li><li>자유로운 형식의 텍스트로 출력해도 상관없지만 짧은 한 단락 정도의 설명이 이상적입니다.</li><li>핵심이 되는 asdf-vm 문서에서 이미 설명되어 있는 정보는 출력하지 않아야 합니다.</li><li>운영 체제와 설치된 툴의 버전에 맞게 출력해야합니다 (필요에 따라 <code>ASDF_INSTALL_VERSION</code> 및 <code>ASDF_INSTALL_TYPE</code> 환경 변수의 값을 사용하십시오).</li><li>성공 시에는 <code>0</code>이 종료 코드입니다.</li><li>실패 시에는 0이 아닌 상태의 종료 코드입니다.</li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf help &lt;name&gt; [&lt;version&gt;]</code>: 플러그인 및 도구 문서를 출력</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/help.overview</span></span></code></pre></div><hr><h3 id="bin-help-deps" tabindex="-1"><code>bin/help.deps</code> <a class="header-anchor" href="#bin-help-deps" aria-label="Permalink to &quot;`bin/help.deps`&quot;">​</a></h3><p><strong>설명</strong></p><p>운영 체제에 맞는 dependencies 목록을 출합니다. 한 행마다 한 개의 dependency.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sed</span></span></code></pre></div><p><strong>구현 세부사항</strong></p><ul><li>이 스크립트의 출력되기 위해서는 <code>bin/help.overview</code>가 필요합니다.</li><li>운영 체제와 설치된 툴의 버전에 맞게 출력해야합니다 (필요에 따라 <code>ASDF_INSTALL_VERSION</code> 및 <code>ASDF_INSTALL_TYPE</code> 환경 변수의 값을 사용하십시오).</li><li>성공 시에는 <code>0</code>이 종료 코드입니다.</li><li>실패 시에는 0이 아닌 상태의 종료 코드입니다.</li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf help &lt;name&gt; [&lt;version&gt;]</code>: 플러그인 및 도구 문서를 출력</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/help.deps</span></span></code></pre></div><hr><h3 id="bin-help-config" tabindex="-1"><code>bin/help.config</code> <a class="header-anchor" href="#bin-help-config" aria-label="Permalink to &quot;`bin/help.config`&quot;">​</a></h3><p><strong>설명</strong></p><p>플러그인 및 도구에 필수적 또는 선택적 설정 출력. 예를 들어, 도구를 설치하거나 컴파일하는 데 필요한 환경 변수나 기타 플래그를 설명.</p><p><strong>구현 세부사항</strong></p><ul><li>이 스크립트의 출력되기 위해서는 <code>bin/help.overview</code>가 필요합니다.</li><li>자유로운 형식의 텍스트로 출력할 수 있습니다.</li><li>운영 체제와 설치된 툴의 버전에 맞게 출력해야합니다 (필요에 따라 <code>ASDF_INSTALL_VERSION</code> 및 <code>ASDF_INSTALL_TYPE</code> 환경 변수의 값을 사용하십시오).</li><li>성공 시에는 <code>0</code>이 종료 코드입니다.</li><li>실패 시에는 0이 아닌 상태의 종료 코드입니다.</li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf help &lt;name&gt; [&lt;version&gt;]</code>: 플러그인 및 도구 문서를 출력</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/help.config</span></span></code></pre></div><hr><h3 id="bin-help-links" tabindex="-1"><code>bin/help.links</code> <a class="header-anchor" href="#bin-help-links" aria-label="Permalink to &quot;`bin/help.links`&quot;">​</a></h3><p><strong>설명</strong></p><p>플러그인 및 툴과 관련된 링크 목록을 출력. 한 행마다 한 개의 링크.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Repository:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	https://github.com/vlang/v</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Documentation:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">	https://vlang.io</span></span></code></pre></div><p><strong>구현 세부사항</strong></p><ul><li>이 스크립트의 출력되기 위해서는 <code>bin/help.overview</code>가 필요합니다.</li><li>한행마다 한 개의 링크.</li><li>형식은 다음 중에 하나여야합니다: <ul><li><code>&lt;title&gt;: &lt;link&gt;</code></li><li>또는 그냥 <code>&lt;link&gt;</code></li></ul></li><li>운영 체제와 설치된 툴의 버전에 맞게 출력해야합니다 (필요에 따라 <code>ASDF_INSTALL_VERSION</code> 및 <code>ASDF_INSTALL_TYPE</code> 환경 변수의 값을 사용하십시오).</li><li>성공 시에는 <code>0</code>이 종료 코드입니다.</li><li>실패 시에는 0이 아닌 상태의 종료 코드입니다.</li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf help &lt;name&gt; [&lt;version&gt;]</code>: 플러그인 및 도구 문서를 출력</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/bin/help.links</span></span></code></pre></div><hr><h3 id="bin-list-bin-paths" tabindex="-1"><code>bin/list-bin-paths</code> <a class="header-anchor" href="#bin-list-bin-paths" aria-label="Permalink to &quot;`bin/list-bin-paths`&quot;">​</a></h3><p><strong>설명</strong></p><p>툴의 특정 버전에서 실행파일이 포함된 디렉토리 목록을 출력.</p><p><strong>구현 세부사항</strong></p><ul><li>이 스크립트가 존재하지 않는 경우, asdf는 <code>&quot;${ASDF_INSTALL_PATH}&quot;/bin</code> 디렉토리 내에 있는 바이너리들을 찾아 그 바이너리를 위한 shim들을 생성합니다.</li><li>실행파일이 포함된 디렉토리의 경로를 공백으로 구분하여 출력합니다.</li><li>경로는 <code>ASDF_INSTALL_PATH</code>로의 상대 경로이어야 합니다. 출력 예시는 다음과 같습니다:</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> veggies</span></span></code></pre></div><p>이는 asdf가 그 파일들을 위한 shim들을 다음 위치에 생성하게 지시합니다:</p><ul><li><code>&quot;${ASDF_INSTALL_PATH}&quot;/bin</code></li><li><code>&quot;${ASDF_INSTALL_PATH}&quot;/tools</code></li><li><code>&quot;${ASDF_INSTALL_PATH}&quot;/veggies</code></li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf install &lt;tool&gt; [version]</code>: 초기에 바이너리들을 위한 shim들 생성.</li><li><code>asdf reshim &lt;tool&gt; &lt;version&gt;</code>: 바이너리들을 위한 shim들 재생성.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/list-bin-paths&quot;</span></span></code></pre></div><hr><h3 id="bin-exec-env" tabindex="-1"><code>bin/exec-env</code> <a class="header-anchor" href="#bin-exec-env" aria-label="Permalink to &quot;`bin/exec-env`&quot;">​</a></h3><p><strong>설명</strong></p><p>툴 바이너리의 shim을 실행하기 전에 환경을 준비.</p><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf which &lt;command&gt;</code>: 실행파일의 경로 표시</li><li><code>asdf exec &lt;command&gt; [args...]</code>: 현재 버전에서 shim 명령을 실행</li><li><code>asdf env &lt;command&gt; [util]</code>: shim 명령어 실행 시 사용되는 환경에서 유틸리티(기본값: <code>env</code>)를 실행.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/exec-env&quot;</span></span></code></pre></div><hr><h3 id="bin-exec-path" tabindex="-1"><code>bin/exec-path</code> <a class="header-anchor" href="#bin-exec-path" aria-label="Permalink to &quot;`bin/exec-path`&quot;">​</a></h3><p>툴의 특정 버전의 실행파일 경로를 가져옵니다. 실행파일에 대한 상대 경로를 문자열로 출력해야합니다. 이는 플러그인이 shim에서 지정한 실행파일 경로를 조건부로 덮어쓰게 하거나, 그렇지 않으면 shim에서 지정한 기본 경로를 반환합니다.</p><p><strong>설명</strong></p><p>툴의 특정 버전의 실행파일 경로를 가져옵니다.</p><p><strong>구현 세부사항</strong></p><ul><li>실행파일에 대한 상대 경로를 문자열로 출력.</li><li>Shim에서 지정한 실행파일 경로를 조건부로 덮어쓰거나, 그렇지 않으면 shim에서 지정한 기본 경로를 반환.</li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Usage:</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  plugin/bin/exec-path</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">install-pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">comman</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">executable-pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Example</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Call:</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ~/.asdf/plugins/foo/bin/exec-path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;~/.asdf/installs/foo/1.0&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;foo&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;bin/foo&quot;</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Output:</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  bin/foox</span></span></code></pre></div><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf which &lt;command&gt;</code>: 실행파일의 경로 표시</li><li><code>asdf exec &lt;command&gt; [args...]</code>: 현재 버전에서 shim 명령을 실행</li><li><code>asdf env &lt;command&gt; [util]</code>: shim 명령어 실행 시 사용되는 환경에서 유틸리티(기본값: <code>env</code>)를 실행.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/exec-path&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$install_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$relative_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><hr><h3 id="bin-uninstall" tabindex="-1"><code>bin/uninstall</code> <a class="header-anchor" href="#bin-uninstall" aria-label="Permalink to &quot;`bin/uninstall`&quot;">​</a></h3><p><strong>설명</strong></p><p>툴의 지정된 버전을 제거합니다.</p><p><strong>출력 형식</strong></p><p>출력값은 <code>stdout</code> 또는 <code>stderr</code>에 적절히 송신 되어야 합니다. 어떠한 출력값도 후속 코어 실행에 의해 사용되지 않습니다.</p><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><p>이 스크립트에는 환경 변수가 제공되지 않습니다.</p><p><strong>이 스크립트를 호출하는 명령어</strong></p><ul><li><code>asdf list all &lt;name&gt; &lt;version&gt;</code></li><li><code>asdf uninstall nodejs 18.15.0</code>: nodejs의 <code>18.15.0</code> 버전을 제거, <code>npm i -g</code>로 설치된 모든 글로벌 shim들 또한 제거.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><p>제공되는 매개변수는 없습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/uninstall&quot;</span></span></code></pre></div><hr><h3 id="bin-list-legacy-filenames" tabindex="-1"><code>bin/list-legacy-filenames</code> <a class="header-anchor" href="#bin-list-legacy-filenames" aria-label="Permalink to &quot;`bin/list-legacy-filenames`&quot;">​</a></h3><p><strong>설명</strong></p><p>툴 버전을 결정하는 데 사용된 레거시 설정 파일 목록을 출력.</p><p><strong>구현 세부사항</strong></p><ul><li>파일이름들의 목록을 공백으로 구분하여 출력.<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.ruby-version</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .rvmrc</span></span></code></pre></div></li><li><code>&quot;${HOME}&quot;/.asdfrc</code>에서 <code>legacy_version_file</code> 옵션을 활성화한 사용자에게만 적용됩니다.</li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_INSTALL_TYPE</code>: <code>version</code> 또는 <code>ref</code></li><li><code>ASDF_INSTALL_VERSION</code>: <ul><li><code>ASDF_INSTALL_TYPE=version</code>의 경우, 풀 버전 번호.</li><li><code>ASDF_INSTALL_TYPE=ref</code>의 경우, Git ref (태그/커밋/브랜치).</li></ul></li><li><code>ASDF_INSTALL_PATH</code>: 툴이 설치 <em>되어있는</em>, 또는 <em>되어야하는</em> 경로.</li></ul><p><strong>이 스크립트를 호출하는 명령어</strong></p><p>툴 버전을 가져오는 모든 명령에서 호출됩니다.</p><p><strong>asdf core에서 호출 시그니처</strong></p><p>제공되는 매개변수는 없습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/list-legacy-filenames&quot;</span></span></code></pre></div><hr><h3 id="bin-parse-legacy-file" tabindex="-1"><code>bin/parse-legacy-file</code> <a class="header-anchor" href="#bin-parse-legacy-file" aria-label="Permalink to &quot;`bin/parse-legacy-file`&quot;">​</a></h3><p><strong>설명</strong></p><p>asdf에 의해 발견된 레거시 파일을 parse하여 툴의 버전을 결정. 자바스크립트의 <code>package.json</code>이나 Go 언어의 <code>go.mod</code>와 같은 파일에서 버전 번호를 추출하는 데 유용.</p><p><strong>구현 세부사항</strong></p><ul><li>이 스크립트가 존재하지 않는 경우, asdf는 단순히 레거시 파일을 <code>cat</code>하여 버전을 결정합니다.</li><li>다음과 같은 상황에서도 <strong>결정론적</strong>이고 항상 동일하고 정확한 버전을 반환해야합니다: <ul><li>동일한 레거시 파일을 구문 parsing할 때.</li><li>무엇이 설치되어 있는지 또는 레거시 버전이 유효하거나 완전한지는 관계 없이. 일부 레거시 파일 형식은 맞지 않을 수도 있습니다.</li></ul></li><li>아래와 같이 버전 번호를 한 줄로 출력해 주세요:<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1.2.3</span></span></code></pre></div></li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><p>이 스크립트가 호출되기 전에 환경 변수가 설정되지 않습니다.</p><p><strong>이 스크립트를 호출하는 명령어</strong></p><p>툴 버전을 가져오는 모든 명령에서 호출됩니다.</p><p><strong>asdf core에서 호출 시그니처</strong></p><p>이 스크립트는 레거시 파일의 내용을 읽기 위해 레거시 파일의 경로라는 하나의 인수를 받습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/parse-legacy-file&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$file_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><hr><h3 id="bin-post-plugin-add" tabindex="-1"><code>bin/post-plugin-add</code> <a class="header-anchor" href="#bin-post-plugin-add" aria-label="Permalink to &quot;`bin/post-plugin-add`&quot;">​</a></h3><p><strong>설명</strong></p><p>이 콜백 스크립트는 asdf의 <code>asdf plugin add &lt;tool&gt;</code> 명령어로 플러그인이 <em>추가된</em> <strong>후에</strong> 실행됩니다.</p><p>관련된 명령어 훅들을 참조하세요:</p><ul><li><code>pre_asdf_plugin_add</code></li><li><code>pre_asdf_plugin_add_${plugin_name}</code></li><li><code>post_asdf_plugin_add</code></li><li><code>post_asdf_plugin_add_${plugin_name}</code></li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_PLUGIN_PATH</code>: 플러그인이 설치된 경로.</li><li><code>ASDF_PLUGIN_SOURCE_URL</code>: 플러그인 소스의 URL. 로컬 디렉토리 경로일 수 있음.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><p>제공되는 매개변수는 없습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/post-plugin-add&quot;</span></span></code></pre></div><hr><h3 id="bin-post-plugin-update" tabindex="-1"><code>bin/post-plugin-update</code> <a class="header-anchor" href="#bin-post-plugin-update" aria-label="Permalink to &quot;`bin/post-plugin-update`&quot;">​</a></h3><p><strong>설명</strong></p><p>이 콜백 스크립트는 asdf가 <code>asdf plugin update &lt;tool&gt; [&lt;git-ref&gt;]</code> 커맨드로 플러그인 <em>업데이트</em> 를 다운로드한 <strong>후에</strong> 실행됩니다.</p><p>관련된 명령어 훅들을 참조하세요:</p><ul><li><code>pre_asdf_plugin_update</code></li><li><code>pre_asdf_plugin_update_${plugin_name}</code></li><li><code>post_asdf_plugin_update</code></li><li><code>post_asdf_plugin_update_${plugin_name}</code></li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_PLUGIN_PATH</code>: 플러그인이 설치된 경로.</li><li><code>ASDF_PLUGIN_PREV_REF</code>: 플러그인의 이전 git-ref</li><li><code>ASDF_PLUGIN_POST_REF</code>: 플러그인의 업데이트 된 git-ref</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><p>제공되는 매개변수는 없습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/post-plugin-update&quot;</span></span></code></pre></div><hr><h3 id="bin-pre-plugin-remove" tabindex="-1"><code>bin/pre-plugin-remove</code> <a class="header-anchor" href="#bin-pre-plugin-remove" aria-label="Permalink to &quot;`bin/pre-plugin-remove`&quot;">​</a></h3><p><strong>설명</strong></p><p>asdf가 <code>asdf plugin remove &lt;tool&gt;</code> 커맨드로 플러그인을 제거하기 <strong>전에</strong> 이 콜백 스크립트를 실행시키세요.</p><p>관련된 명령어 훅들을 참조하세요:</p><ul><li><code>pre_asdf_plugin_remove</code></li><li><code>pre_asdf_plugin_remove_${plugin_name}</code></li><li><code>post_asdf_plugin_remove</code></li><li><code>post_asdf_plugin_remove_${plugin_name}</code></li></ul><p><strong>스크립트에서 사용 가능한 환경 변수</strong></p><ul><li><code>ASDF_PLUGIN_PATH</code>: 플러그인이 설치된 경로.</li></ul><p><strong>asdf core에서 호출 시그니처</strong></p><p>제공되는 매개변수는 없습니다.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugin_path</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">}/bin/pre-plugin-remove&quot;</span></span></code></pre></div>',172)),i("h2",m,[s[42]||(s[42]=a("asdf CLI 확장 명령어 ")),l(t,{type:"danger",text:"고급",vertical:"middle"}),s[43]||(s[43]=a()),s[44]||(s[44]=i("a",{class:"header-anchor",href:"#asdf-cli-확장-명령어","aria-label":'Permalink to "asdf CLI 확장 명령어 <Badge type="danger" text="고급" vertical="middle" />"'},"​",-1))]),s[54]||(s[54]=e('<p><code>lib/commands/command*.bash</code> 스크립트 또는 플러그인 이름을 하위명령어로 사용하여 asdf 명령줄 인터페이스를 통해 호출할 수 있는 실행파일을 제공함으로써 새로운 asdf 명령어를 정의할 수 있습니다.</p><p>예를 들면, <code>foo</code>라고 하는 플러그인이 있다고 하면:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">foo/</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  lib/commands/</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    command</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.bash</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    command-bat.bash</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    command-bat-man.bash</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    command-help.bash</span></span></code></pre></div><p>사용자는 아래 명령을 실행할 수 있게 됩니다:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command.bash`</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bar</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command.bash bar`</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> help</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-help.bash`</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> man</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat-man.bash`</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> foo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> baz</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # same as running `$ASDF_DATA_DIR/plugins/foo/lib/commands/command-bat.bash baz`</span></span></code></pre></div><p>플러그인 개발자는 이 기능을 사용하여 툴과 관련된 유틸리티를 제공하거나, asdf 자체의 명령어 확장 플러그인을 생성할 수 있습니다.</p><p>실행 가능 비트(executable bit)가 부여되어 있는 경우, asdf 실행을 대신하여 해당 스크립트가 실행됩니다.</p><p>실행 가능 비트(executable bit)가 부여되지 않은 경우, asdf는 해당 스크립트를 Bash 스크립트로 source합니다.</p><p><code>$ASDF_CMD_FILE</code>는 source 되는 파일의 전체 경로를 해결합니다.</p><p><a href="https://github.com/asdf-community/asdf-haxe" target="_blank" rel="noreferrer"><code>haxe</code></a>는 이 기능을 사용하는 플러그인의 좋은 예시입니다. 이 플러그인은 Haxe 실행파일이 해당 디렉토리에서 상대적으로 동적 라이브러리를 찾으려하는 문제해결을 위해 <code>asdf haxe neko-dylibs-link</code>를 제공합니다.</p><p>플러그인 README에는 asdf 확장 명령어에 관한 것을 반드시 기재하도록 하십시오.</p>',11)),i("h2",f,[s[45]||(s[45]=a("맞춤 Shim 템플릿 ")),l(t,{type:"danger",text:"고급",vertical:"middle"}),s[46]||(s[46]=a()),s[47]||(s[47]=i("a",{class:"header-anchor",href:"#맞춤-shim-템플릿","aria-label":'Permalink to "맞춤 Shim 템플릿 <Badge type="danger" text="고급" vertical="middle" />"'},"​",-1))]),s[55]||(s[55]=e(`<div class="warning custom-block"><p class="custom-block-title">경고</p><p><strong>반드시</strong> 필요한 경우에만 사용하세요.</p></div><p>asdf에서는 맞춤 shim 템플릿을 사용할 수 있습니다. <code>foo</code>라고 하는 실행파일에 대해, 플러그인 내에 <code>shims/foo</code> 파일이 존재하면, asdf는 표준 shim 템플릿을 사용하는 대신 그 파일을 복사합니다.</p><p><strong>이 기능은 현명하게 사용해야합니다.</strong></p><p>asdf 코어팀이 파악하고 있는 것은, 이 기능은 오직 공식 플러그인 <a href="https://github.com/asdf-vm/asdf-elixir" target="_blank" rel="noreferrer">Elixir 플러그인</a>에서만 사용되고 있습니다. 이는 실행파일은 실행파일일 뿐만 아니라 Elixir 파일로도 읽히기 때문입니다. 이 때문에 표준 Bash shim을 사용할 수 없습니다.</p><h2 id="테스팅" tabindex="-1">테스팅 <a class="header-anchor" href="#테스팅" aria-label="Permalink to &quot;테스팅&quot;">​</a></h2><p><code>asdf</code>에는 플러그인을 테스트하기 위한 <code>plugin-test</code> 명령어가 포함되어 있습니다:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">plugin_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">plugin_ur</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">l</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--asdf-tool-version </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">versio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [--asdf-plugin-gitref </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git_re</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">f</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [test_command...]</span></span></code></pre></div><ul><li><code>&lt;plugin_name&gt;</code> 및 <code>&lt;plugin_url&gt;</code>는 필수적입니다</li><li>옵션에서 <code>[--asdf-tool-version &lt;version&gt;]</code>를 지정하면, 해당 지정된 버전의 툴이 설치됩니다. 기본값은 <code>asdf latest &lt;plugin-name&gt;</code>입니다.</li><li>옵션에서 <code>[--asdf-plugin-gitref &lt;git_ref&gt;]</code>를 지정하면, 그 커밋/브랜치/태그로 플러그인 자체를 체크아웃합니다. 이것은 플러그인 CI에서 풀 요청을 테스트할 때 유용합니다.</li><li>선택적 매개변수 <code>[test_command...]</code>는 설치된 툴이 올바르게 동작하는지 확인하기위해 실행시키는 명령어입니다. 일반적으로 <code>&lt;tool&gt; --version</code> 또는 <code>&lt;tool&gt; --help</code>입니다. 예를 들어, NodeJS 플러그인을 테스트하기 위해, 다음을 실행시킬 수 있습니다<div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># asdf plugin test &lt;plugin_name&gt;  &lt;plugin_url&gt;                               [test_command]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         https://github.com/asdf-vm/asdf-nodejs.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div></li></ul><div class="tip custom-block"><p class="custom-block-title">노트</p><p>리눅스와 맥 운영체제 양쪽 CI 환경에서 모두 테스트하는 것을 권장합니다.</p></div><h3 id="github-action" tabindex="-1">GitHub Action <a class="header-anchor" href="#github-action" aria-label="Permalink to &quot;GitHub Action&quot;">​</a></h3><p><a href="https://github.com/asdf-vm/actions" target="_blank" rel="noreferrer">asdf-vm/actions</a> 리포지토리는 GitHub에서 호스팅되는 플러그인을 테스트하기 위한 GitHub Action을 제공합니다. <code>.github/workflows/test.yaml</code> 액션 워크플로우 예시:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Test</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    branches</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">main</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  pull_request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  plugin_test</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">asdf plugin test</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        os</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">          - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">macos-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ matrix.os }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">asdf_plugin_test</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">asdf-vm/actions/plugin-test@v2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          command</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;MY_TOOL&gt; --version&quot;</span></span></code></pre></div><h3 id="travisci-설정" tabindex="-1">TravisCI 설정 <a class="header-anchor" href="#travisci-설정" aria-label="Permalink to &quot;TravisCI 설정&quot;">​</a></h3><p><code>.travis.yml</code> 예시 파일, 필요에 따라 바꿔 사용하세요:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">language</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">c</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">asdf plugin test &lt;MY_TOOL&gt; $TRAVIS_BUILD_DIR &#39;&lt;MY_TOOL&gt; --version&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">before_script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">git clone https://github.com/asdf-vm/asdf.git asdf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">. asdf/asdf.sh</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">os</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">linux</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">osx</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">노트</p><p>다른 CI를 사용하는 경우, 플러그인 위치에 대한 상대 경로를 전달할 필요가 있는 경우가 있습니다:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> test</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">tool_nam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">e</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">h</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&lt;tool_command&gt; --version&#39;</span></span></code></pre></div></div><h2 id="api-속도-제한" tabindex="-1">API 속도 제한 <a class="header-anchor" href="#api-속도-제한" aria-label="Permalink to &quot;API 속도 제한&quot;">​</a></h2><p><code>bin/list-all</code>이나 <code>bin/latest-stable</code>과 같이 명령어가 외부 API에 대한 접근에 의존하고 있는 경우, 자동화 테스트 중에 속도 제한이 발생할 수 있습니다. 이를 줄이기 위해, 환경 변수를 통해 인증 토큰을 제공하는 코드 경로가 있는지 확인하십시오. 예를 들어:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;curl --silent&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$GITHUB_API_TOKEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ]; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -H &#39;Authorization: token </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$GITHUB_API_TOKEN</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">fi</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">cmd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$cmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $releases_path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h3 id="github-api-token" tabindex="-1"><code>GITHUB_API_TOKEN</code> <a class="header-anchor" href="#github-api-token" aria-label="Permalink to &quot;\`GITHUB_API_TOKEN\`&quot;">​</a></h3><p><code>GITHUB_API_TOKEN</code>를 사용할 때는, 오직 <code>public_repo</code> 액세스 권환으로 <a href="https://github.com/settings/tokens/new" target="_blank" rel="noreferrer">새로운 개인 토큰</a>을 생성합니다.</p><p>다음으로 이 토큰을 CI pipeline 환경 변수에 추가하십시오.</p><div class="warning custom-block"><p class="custom-block-title">경고</p><p>절대 인증 토큰을 코드 리포지토리에 공개해서는 안됩니다.</p></div><h2 id="플러그인-shortname-인덱스" tabindex="-1">플러그인 Shortname 인덱스 <a class="header-anchor" href="#플러그인-shortname-인덱스" aria-label="Permalink to &quot;플러그인 Shortname 인덱스&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>권장되는 플러그인 설치 방법은 URL을 바탕으로 직접 설치입니다:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># asdf plugin add &lt;name&gt; &lt;git_url&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/asdf-vm/asdf-nodejs</span></span></code></pre></div></div><p><code>git_url</code>이 지정되지 않은 경우, asdf는 사용될 <code>git_url</code>을 정확히 결정하기 위해 <a href="https://github.com/asdf-vm/asdf-plugins" target="_blank" rel="noreferrer">Shortname 인덱스 리포지토리</a>를 사용합니다.</p><p><a href="https://github.com/asdf-vm/asdf-plugins" target="_blank" rel="noreferrer">Shortname 인덱스</a>에 설명서에 따라 플러그인을 해당 리포지토리에 추가할 수 있습니다.</p>`,27))])}const x=n(h,[["render",_]]);export{L as __pageData,x as default};
