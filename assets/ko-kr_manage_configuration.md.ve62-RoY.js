import{_ as s,C as n,c as i,o as r,ag as a,j as e,a as l,G as d}from"./chunks/framework.CkHWihve.js";const E=JSON.parse('{"title":"설정","description":"","frontmatter":{},"headers":[],"relativePath":"ko-kr/manage/configuration.md","filePath":"ko-kr/manage/configuration.md","lastUpdated":1749261397000}'),c={name:"ko-kr/manage/configuration.md"},p={tabindex:"0"},f={style:{"text-align":"left"}},u={tabindex:"0"},g={style:{"text-align":"left"}},h={tabindex:"0"},y={style:{"text-align":"left"}},b={tabindex:"0"},_={style:{"text-align":"left"}};function m(x,t,v,k,A,D){const o=n("Badge");return r(),i("div",null,[t[27]||(t[27]=a(`<h1 id="설정" tabindex="-1">설정 <a class="header-anchor" href="#설정" aria-label="Permalink to &quot;설정&quot;">​</a></h1><p><code>asdf</code>의 설정은 공유가능한 <code>.tool-versions</code> 파일들 뿐만 아니라 <code>.asdfrc</code>를 통한 특정한 사용자 맞춤화 및 환경 변수들을 모두 포함합니다.</p><h2 id="tool-versions" tabindex="-1"><code>.tool-versions</code> <a class="header-anchor" href="#tool-versions" aria-label="Permalink to &quot;\`.tool-versions\`&quot;">​</a></h2><p>한 디렉토리에 <code>.tool-versions</code> 파일이 존재하면, 해당 파일에 정의된 툴 버전들은 해당 디렉토리와 모든 하위 디렉토리에서 사용됩니다.</p><div class="warning custom-block"><p class="custom-block-title">노트</p><p>글로벌 기본값들은 <code>$HOME/.tool-versions</code> 파일에 설정 가능합니다</p></div><p><code>.tool-versions</code> 파일의 형태는 다음과 같습니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ruby 2.5.3</span></span>
<span class="line"><span>nodejs 10.15.0</span></span></code></pre></div><p>다음과 같이 주석을 넣을 수 있습니다:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>ruby 2.5.3 # This is a comment</span></span>
<span class="line"><span># This is another comment</span></span>
<span class="line"><span>nodejs 10.15.0</span></span></code></pre></div><p>버전들은 다음과 같은 형식일 수 있습니다:</p><ul><li><code>10.15.0</code> - 실제 버전. 바이너리 다운로드를 지원하는 플러그인은 바이너리를 다운로드합니다.</li><li><code>ref:v1.0.2-a</code> 혹은 <code>ref:39cb398vb39</code> - 지정된 태그/커밋/브랜치 Github로부터 다운로드하고 컴파일됩니다.</li><li><code>path:~/src/elixir</code> - 사용하려는 툴의 맞춤 컴파일 버전을 위한 경로. 언어 개발자들 등이 사용합니다.</li><li><code>system</code> - 이 키워드는 asdf가 asdf에 의해 관리되지 않는 시스템 버전 툴의 버전을 사용하게합니다.</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>다양한 버전들은 공백으로 구분하여 설정될 수 있습니다. 예를 들어, 파이썬 <code>3.7.2</code>를 사용하고, 파이썬 <code>2.7.15</code>로 그리고 마지막으로 <code>system</code> 파이썬으로 폴백하려면, 다음을 <code>.tool-versions</code>에 추가해주세요.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>python 3.7.2 2.7.15 system</span></span></code></pre></div></div><p><code>.tool-version</code> 파일에 정의된 모든 툴들을 설치하려면 <code>.tool-version</code> 파일이 포함된 디렉토리에서 다른 인수 없이 <code>asdf install</code>을 실행합니다.</p><p><code>.tool-versions</code> 파일에 정의된 하나의 툴을 설치하려면 <code>.tool-version</code> 파일이 포함된 디렉토리에서 <code>asdf install &lt;name&gt;</code>를 실행합니다. 이 툴은 <code>.tool-versions</code> 파일에 정의된 버전으로 설치됩니다.</p><p>해당 파일은 직접 편집하거나 <code>asdf local</code> 명령어(또는 <code>asdf global</code> 명령어)를 사용하여 업데이트해 주세요.</p><h2 id="asdfrc" tabindex="-1"><code>.asdfrc</code> <a class="header-anchor" href="#asdfrc" aria-label="Permalink to &quot;\`.asdfrc\`&quot;">​</a></h2><p><code>.asdfrc</code> 파일은 사용자의 머신별 설정을 정의합니다.</p><p><code>\${HOME}/.asdfrc</code>는 asdf가 사용하는 기본 위치입니다. 이는 <a href="#asdf-config-file">환경 변수 <code>ASDF_CONFIG_FILE</code></a>로 설정 가능합니다.</p><p>아래 파일은 필수적인 형식과 기본값들을 보여줍니다:</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>legacy_version_file = no</span></span>
<span class="line"><span>use_release_candidates = no</span></span>
<span class="line"><span>always_keep_download = no</span></span>
<span class="line"><span>plugin_repository_last_check_duration = 60</span></span>
<span class="line"><span>disable_plugin_short_name_repository = no</span></span>
<span class="line"><span>concurrency = auto</span></span></code></pre></div><h3 id="legacy-version-file" tabindex="-1"><code>legacy_version_file</code> <a class="header-anchor" href="#legacy-version-file" aria-label="Permalink to &quot;\`legacy_version_file\`&quot;">​</a></h3><p><strong>지원되는</strong> 플러그인들은 다른 버전 매니저에서 사용되는 버전 파일들을 읽을 수 있습니다, 예를 들어, 루비의 <code>rbenv</code>에서 <code>.ruby-version</code>.</p>`,22)),e("table",p,[t[4]||(t[4]=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"옵션"),e("th",{style:{"text-align":"left"}},"설명")])],-1)),e("tbody",null,[e("tr",null,[e("td",f,[t[0]||(t[0]=e("code",null,"no",-1)),t[1]||(t[1]=l()),d(o,{type:"tip",text:"기본",vertical:"middle"})]),t[2]||(t[2]=e("td",{style:{"text-align":"left"}},[l("버전을 불러오는 데는 "),e("code",null,".tool-versions"),l("를 사용합니다")],-1))]),t[3]||(t[3]=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"yes")]),e("td",{style:{"text-align":"left"}},[l("이용 가능한 레거시 버전 파일("),e("code",null,".ruby-version"),l(" 등)이 있는 경우 플러그인의 폴백으로 사용합니다")])],-1))])]),t[28]||(t[28]=e("h3",{id:"always-keep-download",tabindex:"-1"},[e("code",null,"always_keep_download"),l(),e("a",{class:"header-anchor",href:"#always-keep-download","aria-label":'Permalink to "`always_keep_download`"'},"​")],-1)),t[29]||(t[29]=e("p",null,[e("code",null,"asdf install"),l(" 명령어로 다운로드하는 소스 코드 또는 바이너리를 유지 또는 제거하도록 설정합니다")],-1)),e("table",u,[t[9]||(t[9]=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"옵션"),e("th",{style:{"text-align":"left"}},"설명")])],-1)),e("tbody",null,[e("tr",null,[e("td",g,[t[5]||(t[5]=e("code",null,"no",-1)),t[6]||(t[6]=l()),d(o,{type:"tip",text:"기본",vertical:"middle"})]),t[7]||(t[7]=e("td",{style:{"text-align":"left"}},"성공적인 설치 후 소스 코드 또는 바이너리 제거",-1))]),t[8]||(t[8]=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"yes")]),e("td",{style:{"text-align":"left"}},"설치 후 소스 코드 또는 바이너리 유지")],-1))])]),t[30]||(t[30]=e("h3",{id:"plugin-repository-last-check-duration",tabindex:"-1"},[e("code",null,"plugin_repository_last_check_duration"),l(),e("a",{class:"header-anchor",href:"#plugin-repository-last-check-duration","aria-label":'Permalink to "`plugin_repository_last_check_duration`"'},"​")],-1)),t[31]||(t[31]=e("p",null,"asdf 플러그인 리포지토리 동기화 간격(분)을 설정합니다. 트리거 이벤트는 지난 동기화 시간을 확인하게 합니다. 마지막 동기화 이후 지정된 동기화 간격보다 더 많은 시간이 경과하면, 새로운 동기화가 발생합니다.",-1)),e("table",h,[t[21]||(t[21]=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"옵션"),e("th",{style:{"text-align":"left"}},"설명")])],-1)),e("tbody",null,[e("tr",null,[e("td",y,[t[10]||(t[10]=e("code",null,"1",-1)),t[11]||(t[11]=l("에서 ")),t[12]||(t[12]=e("code",null,"999999999",-1)),t[13]||(t[13]=l(" 사이의 정수 ")),t[14]||(t[14]=e("br",null,null,-1)),t[15]||(t[15]=l()),t[16]||(t[16]=e("code",null,"60",-1)),t[17]||(t[17]=l()),d(o,{type:"tip",text:"기본",vertical:"middle"})]),t[18]||(t[18]=e("td",{style:{"text-align":"left"}},"마지막 동기화 이후 지속 시간(분)이 초과된 경우 트리거 이벤트 동기화",-1))]),t[19]||(t[19]=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"0")]),e("td",{style:{"text-align":"left"}},"각 트리거 이벤트에서 동기화")],-1)),t[20]||(t[20]=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"never")]),e("td",{style:{"text-align":"left"}},"동기화 하지 않음")],-1))])]),t[32]||(t[32]=a('<p>동기화 이벤트는 다음 명령어들을 실행할 때 발생합니다:</p><ul><li><code>asdf plugin add &lt;name&gt;</code></li><li><code>asdf plugin list all</code></li></ul><p><code>asdf plugin add &lt;name&gt; &lt;git-url&gt;</code> 플러그인 동기화를 트리거하지 않습니다.</p><div class="warning custom-block"><p class="custom-block-title">노트</p><p>해당 값을 <code>never</code>로 설정하는 것은 플러그인 리포지토리의 초기 동기화를 막지 않고, 해당 기능을 위해 <code>disable_plugin_short_name_repository</code>를 참조하세요.</p></div><h3 id="disable-plugin-short-name-repository" tabindex="-1"><code>disable_plugin_short_name_repository</code> <a class="header-anchor" href="#disable-plugin-short-name-repository" aria-label="Permalink to &quot;`disable_plugin_short_name_repository`&quot;">​</a></h3><p>asdf 플러그인 short-name 리포지토리의 동기화를 비활성화합니다. short-name 리포지토리가 비활성화 되어있으면 동기화 이벤트가 조기 종료됩니다.</p>',6)),e("table",b,[t[26]||(t[26]=e("thead",null,[e("tr",null,[e("th",{style:{"text-align":"left"}},"옵션"),e("th",{style:{"text-align":"left"}},"설명")])],-1)),e("tbody",null,[e("tr",null,[e("td",_,[t[22]||(t[22]=e("code",null,"no",-1)),t[23]||(t[23]=l()),d(o,{type:"tip",text:"기본",vertical:"middle"})]),t[24]||(t[24]=e("td",{style:{"text-align":"left"}},"동기화 이벤트에서 asdf 플러그인 리포지토리 clone 또는 업데이트",-1))]),t[25]||(t[25]=e("tr",null,[e("td",{style:{"text-align":"left"}},[e("code",null,"yes")]),e("td",{style:{"text-align":"left"}},"short-name 플러그인 리포지토리 비활성화")],-1))])]),t[33]||(t[33]=a('<p>동기화 이벤트는 다음 명령어들을 실행할 때 발생합니다:</p><ul><li><code>asdf plugin add &lt;name&gt;</code></li><li><code>asdf plugin list all</code></li></ul><p><code>asdf plugin add &lt;name&gt; &lt;git-url&gt;</code>는 플러그인 동기화를 트리거하지 않습니다.</p><div class="warning custom-block"><p class="custom-block-title">노트</p><p>플러그인 short-name repository를 비활성화해도 리포지토리가 이미 동기화된 경우 제거되지 않습니다. <code>rm --recursive --trash $ASDF_DATA_DIR/repository</code>로 플러그인 리포지토리를 제거합니다.</p><p>플러그인 short-name 리포지토리를 비활성화해도 그 리포지토리로부터 설치된 이전의 플러그인은 제거되지 않습니다. <code>asdf plugin remove &lt;name&gt;</code>을 사용하여 플러그인을 제거할 수 있습니다. 플러그인을 제거하면 해당 툴의 모든 설치된 버전이 제거됩니다.</p></div><h3 id="concurrency" tabindex="-1"><code>concurrency</code> <a class="header-anchor" href="#concurrency" aria-label="Permalink to &quot;`concurrency`&quot;">​</a></h3><p>컴파일 중에 사용할 기본 코어 수입니다.</p><table tabindex="0"><thead><tr><th style="text-align:left;">옵션</th><th style="text-align:left;">설명</th></tr></thead><tbody><tr><td style="text-align:left;">정수</td><td style="text-align:left;">소스 코드를 컴파일할 때 사용할 코어 수</td></tr><tr><td style="text-align:left;"><code>auto</code></td><td style="text-align:left;"><code>nproc</code>, <code>sysctl hw.ncpu</code>, <code>/proc/cpuinfo</code> 또는 <code>1</code>을 순차적으로 사용하여 코어 수를 계산합니다</td></tr></tbody></table><p>노트: <code>ASDF_CONCURRENCY</code> 환경 변수가 존재하는 경우 우선 순위를 갖습니다.</p><h3 id="플러그인-훅" tabindex="-1">플러그인 훅 <a class="header-anchor" href="#플러그인-훅" aria-label="Permalink to &quot;플러그인 훅&quot;">​</a></h3><p>다음에서 사용자 맞춤 코드를 실행이 가능합니다:</p><ul><li>플러그인 설치, shim 재생성, 업데이트, 또는 제거 전 또는 후</li><li>플러그인 명령어 실행 전 또는 후</li></ul><p>예를 들어 <code>foo</code>라는 플러그인이 설치되어 있고 <code>bar</code>라는 실행파일이 제공된 경우, 다음 훅들을 사용하여 사용자 맞춤 코드를 먼저 실행할 수 있습니다:</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>pre_foo_bar = echo Executing with args: $@</span></span></code></pre></div><p>지원되는 패턴은 다음과 같습니다:</p><ul><li><code>pre_&lt;plugin_name&gt;_&lt;command&gt;</code></li><li><code>pre_asdf_download_&lt;plugin_name&gt;</code></li><li><code>{pre,post}_asdf_{install,reshim,uninstall}_&lt;plugin_name&gt;</code><ul><li><code>$1</code>: 풀 버전</li></ul></li><li><code>{pre,post}_asdf_plugin_{add,update,remove,reshim}</code><ul><li><code>$1</code>: 플러그인 이름</li></ul></li><li><code>{pre,post}_asdf_plugin_{add,update,remove}_&lt;plugin_name&gt;</code></li></ul><p>어떤 명령어 훅들이 어떤 명령어 이전 또는 이후에 실행되는 지에 대한 자세한 내용은 <a href="./../plugins/create.html">플러그인 생성하기</a>를 참조하세요.</p><h2 id="환경-변수" tabindex="-1">환경 변수 <a class="header-anchor" href="#환경-변수" aria-label="Permalink to &quot;환경 변수&quot;">​</a></h2><p>환경 변수 설정은 시스템과 셸에 따라 다릅니다. 기본 위치는 설치 위치와 방식(Git clone, Homebrew, AUR)에 달려있습니다.</p><p>환경 변수들은 일반적으로 <code>asdf.sh</code>/<code>asdf.fish</code> 등을 source하기 전에 설정됩니다. Elvish의 경우는, 상단에서 <code>use asdf</code>로 설정합니다.</p><p>다음은 Bash 셸에서 사용법에 관한 설명입니다.</p><h3 id="asdf-config-file" tabindex="-1"><code>ASDF_CONFIG_FILE</code> <a class="header-anchor" href="#asdf-config-file" aria-label="Permalink to &quot;`ASDF_CONFIG_FILE`&quot;">​</a></h3><p><code>.asdfrc</code> 설정 파일의 경로. 임의의 위치로 설정 가능합니다. 절대 경로여야 합니다.</p><ul><li>미설정 시: <code>$HOME/.asdfrc</code>가 사용됩니다.</li><li>사용법: <code>export ASDF_CONFIG_FILE=/home/john_doe/.config/asdf/.asdfrc</code></li></ul><h3 id="asdf-tool-versions-filename" tabindex="-1"><code>ASDF_TOOL_VERSIONS_FILENAME</code> <a class="header-anchor" href="#asdf-tool-versions-filename" aria-label="Permalink to &quot;`ASDF_TOOL_VERSIONS_FILENAME`&quot;">​</a></h3><p>툴 이름과 버전을 저장하는 파일의 파일이름입니다. 임의의 유효한 파일 이름이면 됩니다. 일반적으로, <code>.tool-version</code> 파일들을 무시하고 싶을 때 해당 값을 설정하세요.</p><ul><li>미설정 시: <code>.tool-versions</code>가 사용됩니다.</li><li>사용법: <code>export ASDF_TOOL_VERSIONS_FILENAME=tool_versions</code></li></ul><h3 id="asdf-dir" tabindex="-1"><code>ASDF_DIR</code> <a class="header-anchor" href="#asdf-dir" aria-label="Permalink to &quot;`ASDF_DIR`&quot;">​</a></h3><p><code>asdf</code> 코어 스크립트의 위치. 임의의 위치로 설정할 수 있습니다. 절대 경로여야 합니다.</p><ul><li>미설정 시: <code>bin/asdf</code> 실행파일의 한 단계 상위 디렉토리가 사용됩니다.</li><li>사용법: <code>export ASDF_DIR=/home/john_doe/.config/asdf</code></li></ul><h3 id="asdf-data-dir" tabindex="-1"><code>ASDF_DATA_DIR</code> <a class="header-anchor" href="#asdf-data-dir" aria-label="Permalink to &quot;`ASDF_DATA_DIR`&quot;">​</a></h3><p><code>asdf</code>가 플러그인, shim들, 툴 버전들을 설치하는 위치. 임의의 위치로 설정할 수 있습니다. 절대 경로여야 합니다.</p><ul><li>미설정 시: <code>$HOME/.asdf</code> 존재 시 사용, 존재하지 않는 경우 <code>ASDF_DIR</code> 사용</li><li>사용법: <code>export ASDF_DATA_DIR=/home/john_doe/.asdf</code></li></ul><h3 id="asdf-concurrency" tabindex="-1"><code>ASDF_CONCURRENCY</code> <a class="header-anchor" href="#asdf-concurrency" aria-label="Permalink to &quot;`ASDF_CONCURRENCY`&quot;">​</a></h3><p>소스 코드를 컴파일할 때 사용할 코어 수입니다. 설정하면 이 값이 asdf 설정 <code>concurrency</code> 값보다 우선 시 됩니다.</p><ul><li>미설정 시: asdf 설정 <code>concurrency</code> 값이 사용됩니다.</li><li>사용법: <code>export ASDF_CONCURRENCY=32</code></li></ul><h2 id="전체-설정의-예시" tabindex="-1">전체 설정의 예시 <a class="header-anchor" href="#전체-설정의-예시" aria-label="Permalink to &quot;전체 설정의 예시&quot;">​</a></h2><p>다음을 이용한 간단한 asdf 설치는:</p><ul><li>Bash 셸</li><li><code>$HOME/.asdf</code> 설치 위치</li><li>Git을 통한 설치</li><li>환경 변수 설정 없음</li><li>맞춤 <code>.asdfrc</code> 파일 없음</li></ul><p>다음의 결과가 나오게 됩니다:</p><table tabindex="0"><thead><tr><th style="text-align:left;">항목</th><th style="text-align:left;">값</th><th style="text-align:left;">값이 세팅되는 과정</th></tr></thead><tbody><tr><td style="text-align:left;">config file location</td><td style="text-align:left;"><code>$HOME/.asdfrc</code></td><td style="text-align:left;"><code>ASDF_CONFIG_FILE</code>가 비었으므로, <code>$HOME/.asdfrc</code>을 사용</td></tr><tr><td style="text-align:left;">default tool versions filename</td><td style="text-align:left;"><code>.tool-versions</code></td><td style="text-align:left;"><code>ASDF_TOOL_VERSIONS_FILENAME</code>가 비었으므로, <code>.tool-versions</code>을 사용</td></tr><tr><td style="text-align:left;">asdf dir</td><td style="text-align:left;"><code>$HOME/.asdf</code></td><td style="text-align:left;"><code>ASDF_DIR</code>가 비었으므로, <code>bin/asdf</code>의 한 단계 상위 디렉토리 사용</td></tr><tr><td style="text-align:left;">asdf data dir</td><td style="text-align:left;"><code>$HOME/.asdf</code></td><td style="text-align:left;"><code>ASDF_DATA_DIR</code>가 비었으므로, <code>$HOME/.asdf</code>를 <code>$HOME</code>으로 사용.</td></tr><tr><td style="text-align:left;">concurrency</td><td style="text-align:left;"><code>auto</code></td><td style="text-align:left;"><code>ASDF_CONCURRENCY</code>가 비었으므로, <a href="https://github.com/asdf-vm/asdf/blob/master/defaults" target="_blank" rel="noreferrer">기본 설정</a>의 <code>concurrency</code> 값에 의존</td></tr><tr><td style="text-align:left;">legacy_version_file</td><td style="text-align:left;"><code>no</code></td><td style="text-align:left;">맞춤 <code>.asdfrc</code> 없음, <a href="https://github.com/asdf-vm/asdf/blob/master/defaults" target="_blank" rel="noreferrer">기본 설정</a> 사용</td></tr><tr><td style="text-align:left;">use_release_candidates</td><td style="text-align:left;"><code>no</code></td><td style="text-align:left;">맞춤 <code>.asdfrc</code> 없음, <a href="https://github.com/asdf-vm/asdf/blob/master/defaults" target="_blank" rel="noreferrer">기본 설정</a> 사용</td></tr><tr><td style="text-align:left;">always_keep_download</td><td style="text-align:left;"><code>no</code></td><td style="text-align:left;">맞춤 <code>.asdfrc</code> 없음, <a href="https://github.com/asdf-vm/asdf/blob/master/defaults" target="_blank" rel="noreferrer">기본 설정</a> 사용</td></tr><tr><td style="text-align:left;">plugin_repository_last_check_duration</td><td style="text-align:left;"><code>60</code></td><td style="text-align:left;">맞춤 <code>.asdfrc</code> 없음, <a href="https://github.com/asdf-vm/asdf/blob/master/defaults" target="_blank" rel="noreferrer">기본 설정</a> 사용</td></tr><tr><td style="text-align:left;">disable_plugin_short_name_repository</td><td style="text-align:left;"><code>no</code></td><td style="text-align:left;">맞춤 <code>.asdfrc</code> 없음, <a href="https://github.com/asdf-vm/asdf/blob/master/defaults" target="_blank" rel="noreferrer">기본 설정</a> 사용</td></tr></tbody></table>',40))])}const C=s(c,[["render",m]]);export{E as __pageData,C as default};
