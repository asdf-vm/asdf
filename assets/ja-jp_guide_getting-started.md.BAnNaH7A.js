import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.CkHWihve.js";const c=JSON.parse('{"title":"はじめよう","description":"","frontmatter":{},"headers":[],"relativePath":"ja-jp/guide/getting-started.md","filePath":"ja-jp/guide/getting-started.md","lastUpdated":1749299845000}'),h={name:"ja-jp/guide/getting-started.md"};function l(n,s,p,d,k,o){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="はじめよう" tabindex="-1">はじめよう <a class="header-anchor" href="#はじめよう" aria-label="Permalink to &quot;はじめよう&quot;">​</a></h1><h2 id="_1-asdfのインストール" tabindex="-1">1. asdfのインストール <a class="header-anchor" href="#_1-asdfのインストール" aria-label="Permalink to &quot;1. asdfのインストール&quot;">​</a></h2><p>asdfはいくつかの方法でインストールできます:</p><details class="details custom-block"><summary>パッケージマネージャーを使用 - <strong>推奨</strong></summary><table tabindex="0"><thead><tr><th>パッケージマネージャー</th><th>コマンド</th></tr></thead><tbody><tr><td>Homebrew</td><td><code>brew install asdf</code></td></tr><tr><td>Pacman</td><td><code>git clone https://aur.archlinux.org/asdf-vm.git &amp;&amp; cd asdf-vm &amp;&amp; makepkg -si</code> または お好みの <a href="https://wiki.archlinux.jp/index.php/AUR_%E3%83%98%E3%83%AB%E3%83%91%E3%83%BC" target="_blank" rel="noreferrer">AUR ヘルパー</a></td></tr></tbody></table></details><details class="details custom-block"><summary>コンパイル済みバイナリをダウンロード - <strong>かんたん</strong></summary><h5 id="依存関係のインストール" tabindex="-1">依存関係のインストール <a class="header-anchor" href="#依存関係のインストール" aria-label="Permalink to &quot;依存関係のインストール&quot;">​</a></h5><p>asdfの動作には<code>git</code>が必要です。以下の表は、 <em>あなたが使用している</em> パッケージマネージャで実行するコマンドの <em>一部例</em> です(いくつかのツールは、後の手順で自動的にインストールされます)。</p><table tabindex="0"><thead><tr><th>OS</th><th>パッケージマネージャー</th><th>コマンド</th></tr></thead><tbody><tr><td>linux</td><td>Aptitude</td><td><code>apt install git</code></td></tr><tr><td>linux</td><td>DNF</td><td><code>dnf install git</code></td></tr><tr><td>linux</td><td>Pacman</td><td><code>pacman -S git</code></td></tr><tr><td>linux</td><td>Zypper</td><td><code>zypper install git</code></td></tr><tr><td>macOS</td><td>Homebrew</td><td><code>brew install coreutils git</code></td></tr><tr><td>macOS</td><td>Spack</td><td><code>spack install coreutils git</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">備考</p><p>お使いのシステムの構成によっては、<code>sudo</code>が必要となる場合があります。</p></div><h5 id="asdfのインストール" tabindex="-1">asdfのインストール <a class="header-anchor" href="#asdfのインストール" aria-label="Permalink to &quot;asdfのインストール&quot;">​</a></h5><ol><li><a href="https://github.com/asdf-vm/asdf/releases" target="_blank" rel="noreferrer">https://github.com/asdf-vm/asdf/releases</a> から、お使いのオペレーティングシステム/アーキテクチャの組み合わせに適したアーカイブをダウンロード。</li><li>アーカイブ内の<code>asdf</code>バイナリを<code>$PATH</code>のディレクトリに解凍。</li><li><code>type -a asdf</code>を実行して、シェルの<code>$PATH</code>に<code>asdf</code>があることを確認します。<code>asdf</code>のバイナリを置いたディレクトリが<code>type</code>の出力の1行目に表示されるはずです。うまくいかない場合は、2の手順が正しく行えていない可能性があります。</li></ol></details><details class="details custom-block"><summary><code>go install</code> を使用</summary><h5 id="依存関係のインストール-1" tabindex="-1">依存関係のインストール <a class="header-anchor" href="#依存関係のインストール-1" aria-label="Permalink to &quot;依存関係のインストール&quot;">​</a></h5><p>asdfの動作には<code>git</code>が必要です。以下の表は、 <em>あなたが使用している</em> パッケージマネージャで実行するコマンドの <em>一部例</em> です(いくつかのツールは、後の手順で自動的にインストールされます)。</p><table tabindex="0"><thead><tr><th>OS</th><th>パッケージマネージャー</th><th>コマンド</th></tr></thead><tbody><tr><td>linux</td><td>Aptitude</td><td><code>apt install git</code></td></tr><tr><td>linux</td><td>DNF</td><td><code>dnf install git</code></td></tr><tr><td>linux</td><td>Pacman</td><td><code>pacman -S git</code></td></tr><tr><td>linux</td><td>Zypper</td><td><code>zypper install git</code></td></tr><tr><td>macOS</td><td>Homebrew</td><td><code>brew install coreutils git</code></td></tr><tr><td>macOS</td><td>Spack</td><td><code>spack install coreutils git</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">備考</p><p>お使いのシステムの構成によっては、<code>sudo</code>が必要となる場合があります。</p></div><h5 id="asdfのインストール-1" tabindex="-1">asdfのインストール <a class="header-anchor" href="#asdfのインストール-1" aria-label="Permalink to &quot;asdfのインストール&quot;">​</a></h5><ol><li><a href="https://go.dev/doc/install" target="_blank" rel="noreferrer">Goをインストールする</a></li><li>コマンドを実行: <code>go install github.com/asdf-vm/asdf/cmd/asdf@v0.18.0</code></li></ol></details><details class="details custom-block"><summary>ソースコードからビルドする</summary><h5 id="依存関係のインストール-2" tabindex="-1">依存関係のインストール <a class="header-anchor" href="#依存関係のインストール-2" aria-label="Permalink to &quot;依存関係のインストール&quot;">​</a></h5><p>asdfの動作には<code>git</code>が必要です。以下の表は、 <em>あなたが使用している</em> パッケージマネージャで実行するコマンドの <em>一部例</em> です(いくつかのツールは、後の手順で自動的にインストールされます)。</p><table tabindex="0"><thead><tr><th>OS</th><th>パッケージマネージャー</th><th>コマンド</th></tr></thead><tbody><tr><td>linux</td><td>Aptitude</td><td><code>apt install git</code></td></tr><tr><td>linux</td><td>DNF</td><td><code>dnf install git</code></td></tr><tr><td>linux</td><td>Pacman</td><td><code>pacman -S git</code></td></tr><tr><td>linux</td><td>Zypper</td><td><code>zypper install git</code></td></tr><tr><td>macOS</td><td>Homebrew</td><td><code>brew install coreutils git</code></td></tr><tr><td>macOS</td><td>Spack</td><td><code>spack install coreutils git</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">備考</p><p>お使いのシステムの構成によっては、<code>sudo</code>が必要となる場合があります。</p></div><h5 id="asdfのインストール-2" tabindex="-1">asdfのインストール <a class="header-anchor" href="#asdfのインストール-2" aria-label="Permalink to &quot;asdfのインストール&quot;">​</a></h5><ol><li>asdfリポジトリをクローン:</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/asdf-vm/asdf.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v0.18.0</span></span></code></pre></div><ol start="2"><li><code>make</code>を実行。</li><li><code>asdf</code>バイナリを<code>$PATH</code>上のディレクトリに解凍。</li><li><code>type -a asdf</code>を実行して、シェルの<code>$PATH</code>に<code>asdf</code>があることを確認します。<code>asdf</code>のバイナリを置いたディレクトリが<code>type</code>の出力の1行目に表示されるはずです。うまくいかない場合は、3の手順が正しく行えていない可能性があります。</li></ol></details><h2 id="_2-asdfの設定" tabindex="-1">2. asdfの設定 <a class="header-anchor" href="#_2-asdfの設定" aria-label="Permalink to &quot;2. asdfの設定&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">備考</p><p>ほとんどのユーザーは、asdfが管理するデータ(plugin, install, shim data)の保存先を変更する必要は<strong>ありません</strong>。ただし、デフォルトの<code>$HOME/.asdf</code>以外を指定したい場合は変更することができます。別のディレクトリを指定するには、シェルのRCファイルで<code>ASDF_DATA_DIR</code>変数をエクスポートしてください。</p></div><p>シェル、OS、インストール方法には様々な組み合わせがあり、その全てがここでの設定に影響します。あなたのシステムに最も適したものを選んでください。</p><p><strong>masOSユーザーはこの節の最後にある<code>path_helper</code>に関する警告を必ず参照してください。</strong></p><details class="details custom-block"><summary>Bash</summary><p><strong>macOS Catalina以降</strong>: デフォルトのシェルが<strong>ZSH</strong>に変更されました。Bashに変更していない限り、ZSHの手順を参照してください。</p><p><strong>Pacman</strong>: コマンド補完が必要な場合は、<a href="https://wiki.archlinux.jp/index.php/Bash#.E3.82.88.E3.81.8F.E4.BD.BF.E3.82.8F.E3.82.8C.E3.82.8B.E3.83.97.E3.83.AD.E3.82.B0.E3.83.A9.E3.83.A0.E3.81.A8.E3.82.AA.E3.83.97.E3.82.B7.E3.83.A7.E3.83.B3" target="_blank" rel="noreferrer"><code>bash-completion</code></a>をインストールしてください。</p><h5 id="shimsディレクトリをパスに追加する-必須" tabindex="-1">shimsディレクトリをパスに追加する(必須) <a class="header-anchor" href="#shimsディレクトリをパスに追加する-必須" aria-label="Permalink to &quot;shimsディレクトリをパスに追加する(必須)&quot;">​</a></h5><p><code>~/.bash_profile</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/shims:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h6 id="カスタムデータディレクトリの設定-オプション" tabindex="-1">カスタムデータディレクトリの設定(オプション) <a class="header-anchor" href="#カスタムデータディレクトリの設定-オプション" aria-label="Permalink to &quot;カスタムデータディレクトリの設定(オプション)&quot;">​</a></h6><p><code>~/.bash_profile</code>に以下を追記します(先述したパス追加よりも上の行に書くこと):</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div><h5 id="シェルのコマンド補完設定-オプション" tabindex="-1">シェルのコマンド補完設定(オプション) <a class="header-anchor" href="#シェルのコマンド補完設定-オプション" aria-label="Permalink to &quot;シェルのコマンド補完設定(オプション)&quot;">​</a></h5><p><code>.bashrc</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion bash)</span></span></code></pre></div></details><details class="details custom-block"><summary>Fish</summary><h5 id="shimsディレクトリをパスに追加する-必須-1" tabindex="-1">shimsディレクトリをパスに追加する(必須) <a class="header-anchor" href="#shimsディレクトリをパスに追加する-必須-1" aria-label="Permalink to &quot;shimsディレクトリをパスに追加する(必須)&quot;">​</a></h5><p><code>~/.config/fish/config.fish</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ASDF configuration code</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -z</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ASDF_DATA_DIR</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _asdf_shims</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.asdf/shims&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _asdf_shims</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ASDF_DATA_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/shims&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Do not use fish_add_path (added in Fish 3.2) because it</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># potentially changes the order of items in PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $_asdf_shims $PATH</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -gx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prepend</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $_asdf_shims</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --erase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _asdf_shims</span></span></code></pre></div><h6 id="カスタムデータディレクトリの設定-オプション-1" tabindex="-1">カスタムデータディレクトリの設定(オプション) <a class="header-anchor" href="#カスタムデータディレクトリの設定-オプション-1" aria-label="Permalink to &quot;カスタムデータディレクトリの設定(オプション)&quot;">​</a></h6><p><strong>Pacman</strong>: コマンド補完はAURパッケージのインストール時に自動的に設定されます。</p><p><code>~/.config/fish/config.fish</code>に以下を追記します(先述したパス追加よりも上の行に書くこと):</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -gx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prepend</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ASDF_DATA_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/your/custom/data/dir&quot;</span></span></code></pre></div><h5 id="シェルのコマンド補完設定-オプション-1" tabindex="-1">シェルのコマンド補完設定(オプション) <a class="header-anchor" href="#シェルのコマンド補完設定-オプション-1" aria-label="Permalink to &quot;シェルのコマンド補完設定(オプション)&quot;">​</a></h5><p>コマンド補完は以下を実行して手動で設定する必要があります:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/fish/completions/asdf.fish</span></span></code></pre></div></details><details class="details custom-block"><summary>Elvish</summary><h5 id="shimsディレクトリをパスに追加する-必須-2" tabindex="-1">shimsディレクトリをパスに追加する(必須) <a class="header-anchor" href="#shimsディレクトリをパスに追加する-必須-2" aria-label="Permalink to &quot;shimsディレクトリをパスに追加する(必須)&quot;">​</a></h5><p><code>~/.config/elvish/rc.elv</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">var</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~&#39;/.asdf&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (has-env </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ASDF_DATA_DIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:ASDF_DATA_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:ASDF_DATA_DIR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (has-value $paths $asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/shims&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> paths</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [$path $</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@paths]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h6 id="カスタムデータディレクトリの設定-オプション-2" tabindex="-1">カスタムデータディレクトリの設定(オプション) <a class="header-anchor" href="#カスタムデータディレクトリの設定-オプション-2" aria-label="Permalink to &quot;カスタムデータディレクトリの設定(オプション)&quot;">​</a></h6><p>カスタムデータディレクトリを設定するには、上記のスニペットの以下の行を変更してください:</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-var asdf_data_dir = ~&#39;/.asdf&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+var asdf_data_dir = &#39;/your/custom/data/dir&#39;</span></span></code></pre></div><h5 id="シェルのコマンド補完設定-オプション-2" tabindex="-1">シェルのコマンド補完設定(オプション) <a class="header-anchor" href="#シェルのコマンド補完設定-オプション-2" aria-label="Permalink to &quot;シェルのコマンド補完設定(オプション)&quot;">​</a></h5><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> elvish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/elvish/rc.elv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n&quot;&#39;set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/elvish/rc.elv</span></span></code></pre></div></details><details class="details custom-block"><summary>ZSH</summary><p><strong>Pacman</strong>: コマンド補完はZSHから使いやすい場所に配置されますが、<a href="https://wiki.archlinux.jp/index.php/Zsh#.E3.82.B3.E3.83.9E.E3.83.B3.E3.83.89.E8.A3.9C.E5.AE.8C" target="_blank" rel="noreferrer">自動補完を使うにはZSHの設定で有効化する必要があります</a>。</p><h5 id="shimsディレクトリをパスに追加する-必須-3" tabindex="-1">shimsディレクトリをパスに追加する(必須) <a class="header-anchor" href="#shimsディレクトリをパスに追加する-必須-3" aria-label="Permalink to &quot;shimsディレクトリをパスに追加する(必須)&quot;">​</a></h5><p><code>~/.zshrc</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/shims:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h6 id="カスタムデータディレクトリの設定-オプション-3" tabindex="-1">カスタムデータディレクトリの設定(オプション) <a class="header-anchor" href="#カスタムデータディレクトリの設定-オプション-3" aria-label="Permalink to &quot;カスタムデータディレクトリの設定(オプション)&quot;">​</a></h6><p><code>~/.zshrc</code>に以下を追記します(先述したパス追加よりも上の行に書くこと):</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div><h5 id="シェルのコマンド補完設定-オプション-3" tabindex="-1">シェルのコマンド補完設定(オプション) <a class="header-anchor" href="#シェルのコマンド補完設定-オプション-3" aria-label="Permalink to &quot;シェルのコマンド補完設定(オプション)&quot;">​</a></h5><p>コマンド補完はZSHフレームワークの<code>asdf</code>プラグイン（<a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf" target="_blank" rel="noreferrer">asdf for oh-my-zsh</a>のようなもの）を使用するか、以下の手順で設定します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/completions&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/completions/_asdf&quot;</span></span></code></pre></div><p>その場合は<code>.zshrc</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># append completions to fpath</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fpath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(\${ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.asdf}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/completions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $fpath)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># initialise completions with ZSH&#39;s compinit</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">autoload</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Uz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compinit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compinit</span></span></code></pre></div><p><strong>備考</strong></p><p>ZSHフレームワークでカスタムされた<code>compinit</code>セットアップを使っている場合は、<code>compinit</code>がフレームワークのソース配下にあることを確認してください。</p><p>コマンド補完はZSHフレームワークの<code>asdf</code>で設定するか、<a href="https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh" target="_blank" rel="noreferrer">Homebrewの指示に従って設定</a>する必要があります。ZSHフレームワークを使っている場合、asdf用のプラグインを更新して<code>fpath</code>経由で新しいZSH補完機能を正しく使えるようにする必要があるかもしれません。なお、Oh-My-ZSH asdfプラグインはまだ対応していません。<a href="https://github.com/ohmyzsh/ohmyzsh/pull/8837" target="_blank" rel="noreferrer">ohmyzsh/ohmyzsh#8837</a> を参照してください。</p></details><details class="details custom-block"><summary>PowerShell Core</summary><h5 id="shimsディレクトリをパスに追加する-必須-4" tabindex="-1">shimsディレクトリをパスに追加する(必須) <a class="header-anchor" href="#shimsディレクトリをパスに追加する-必須-4" aria-label="Permalink to &quot;shimsディレクトリをパスに追加する(必須)&quot;">​</a></h5><p><code>~/.config/powershell/profile.ps1</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Determine the location of the shims directory</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($null -eq $ASDF_DATA_DIR -or $ASDF_DATA_DIR -eq </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $_asdf_shims </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/.asdf/shims&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $_asdf_shims </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ASDF_DATA_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/shims&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Then add it to path</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env:PATH = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_asdf_shims</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}:\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span></code></pre></div><h6 id="カスタムデータディレクトリの設定-オプション-4" tabindex="-1">カスタムデータディレクトリの設定(オプション) <a class="header-anchor" href="#カスタムデータディレクトリの設定-オプション-4" aria-label="Permalink to &quot;カスタムデータディレクトリの設定(オプション)&quot;">​</a></h6><p><code>~/.config/powershell/profile.ps1</code>に以下を追記します(先述したスニペットよりも上の行に書くこと):</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env:ASDF_DATA_DIR = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div><p>PowerShellはコマンド補完に対応していません。</p></details><details class="details custom-block"><summary>Nushell</summary><h5 id="shimsディレクトリをパスに追加する-必須-5" tabindex="-1">shimsディレクトリをパスに追加する(必須) <a class="header-anchor" href="#shimsディレクトリをパスに追加する-必須-5" aria-label="Permalink to &quot;shimsディレクトリをパスに追加する(必須)&quot;">​</a></h5><p><code>~/.config/nushell/config.nu</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shims_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ( $env </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ignore-errors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> is-empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.asdf&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ASDF_DATA_DIR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;shims&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ( $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> split</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (char </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">esep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> where</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $p </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $shims_dir </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prepend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $shims_dir )</span></span></code></pre></div><h6 id="カスタムデータディレクトリの設定-オプション-5" tabindex="-1">カスタムデータディレクトリの設定(オプション) <a class="header-anchor" href="#カスタムデータディレクトリの設定-オプション-5" aria-label="Permalink to &quot;カスタムデータディレクトリの設定(オプション)&quot;">​</a></h6><p><code>~/.config/nushell/config.nu</code>に以下を追記します(先述したパス追加よりも上の行に書くこと)：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env.ASDF_DATA_DIR = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div><h5 id="シェルのコマンド補完設定-オプション-4" tabindex="-1">シェルのコマンド補完設定(オプション) <a class="header-anchor" href="#シェルのコマンド補完設定-オプション-4" aria-label="Permalink to &quot;シェルのコマンド補完設定(オプション)&quot;">​</a></h5><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If you&#39;ve not customized the asdf data directory:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.HOME)/.asdf/completions&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nushell</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> save</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.HOME)/.asdf/completions/nushell.nu&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If you have customized the data directory by setting ASDF_DATA_DIR:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ASDF_DATA_DIR)/completions&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nushell</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> save</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ASDF_DATA_DIR)/completions/nushell.nu&quot;</span></span></code></pre></div><p>次に、<code>~/.config/nushell/config.nu</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ( $env </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ignore-errors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> is-empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.asdf&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ASDF_DATA_DIR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/completions/nushell.nu&quot;</span></span></code></pre></div></details><details class="details custom-block"><summary>POSIX Shell</summary><h5 id="shimsディレクトリをパスに追加する-必須-6" tabindex="-1">shimsディレクトリをパスに追加する(必須) <a class="header-anchor" href="#shimsディレクトリをパスに追加する-必須-6" aria-label="Permalink to &quot;shimsディレクトリをパスに追加する(必須)&quot;">​</a></h5><p><code>~/.profile</code>に以下を追記します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/shims:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h6 id="カスタムデータディレクトリの設定-オプション-6" tabindex="-1">カスタムデータディレクトリの設定(オプション) <a class="header-anchor" href="#カスタムデータディレクトリの設定-オプション-6" aria-label="Permalink to &quot;カスタムデータディレクトリの設定(オプション)&quot;">​</a></h6><p><code>~/.profile</code>に以下を追記します(先述したパス追加よりも上の行に書くこと):</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div></details><p><code>asdf</code>のスクリプトは、<code>$PATH</code>を設定した<strong>あと</strong>、かつ、使用中のフレームワーク(oh-my-zsh など)を呼び出した<strong>あと</strong>に記述する必要があります。</p><p><code>PATH</code>の変更を反映するために、シェルを再起動してください。たいていの場合、ターミナルのタブを新たに開けばOKです。</p><h2 id="コアのインストールが完了" tabindex="-1">コアのインストールが完了！ <a class="header-anchor" href="#コアのインストールが完了" aria-label="Permalink to &quot;コアのインストールが完了！&quot;">​</a></h2><p>これで、<code>asdf</code>のコアのインストールは完了です 🎉</p><p>しかし、<code>asdf</code>が役に立つようになるのは、<strong>プラグイン</strong>をインストールしてから<strong>ツール</strong>をインストールし、<strong>バージョン</strong>を管理するようになってからです。引き続き、ガイドを進めていきましょう。</p><h2 id="_4-プラグインのインストール" tabindex="-1">4. プラグインのインストール <a class="header-anchor" href="#_4-プラグインのインストール" aria-label="Permalink to &quot;4. プラグインのインストール&quot;">​</a></h2><p>ここではデモとして、<a href="https://github.com/asdf-vm/asdf-nodejs/" target="_blank" rel="noreferrer"><code>asdf-nodejs</code></a>プラグインを使用して<a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a>をインストール・設定してみましょう。</p><h3 id="プラグインの依存関係" tabindex="-1">プラグインの依存関係 <a class="header-anchor" href="#プラグインの依存関係" aria-label="Permalink to &quot;プラグインの依存関係&quot;">​</a></h3><p>各プラグインには依存関係があるため、プラグインのリポジトリを確認しておきましょう。<code>asdf-nodejs</code>の場合、必要なものは次のとおりです:</p><table tabindex="0"><thead><tr><th>OS</th><th>依存関係インストールコマンド</th></tr></thead><tbody><tr><td>Debian</td><td><code>apt-get install dirmngr gpg curl gawk</code></td></tr><tr><td>CentOS/ Rocky Linux/ AlmaLinux</td><td><code>yum install gnupg2 curl gawk</code></td></tr><tr><td>macOS</td><td><code>brew install gpg gawk</code></td></tr></tbody></table><p>一部のプラグインではインストール後の事後処理でこれらの依存関係が必要となるため、あらかじめインストールしておきましょう。</p><h3 id="プラグインのインストール" tabindex="-1">プラグインのインストール <a class="header-anchor" href="#プラグインのインストール" aria-label="Permalink to &quot;プラグインのインストール&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/asdf-vm/asdf-nodejs.git</span></span></code></pre></div><h2 id="_5-特定のバージョンのインストール" tabindex="-1">5. 特定のバージョンのインストール <a class="header-anchor" href="#_5-特定のバージョンのインストール" aria-label="Permalink to &quot;5. 特定のバージョンのインストール&quot;">​</a></h2><p>Node.js用のプラグインをインストールしたので、このツールの特定のバージョンをインストールしましょう。</p><p>インストール可能なバージョンは<code>asdf list all nodejs</code>コマンドで確認できますし、特定のメジャーバージョンのサブセットは<code>asdf list all nodejs 14</code>コマンドで確認できます。</p><p>最新版をインストールするには、次のコマンドを実行します:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> latest</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">備考</p><p><code>asdf</code>では正確なバージョン番号を指定してください。<code>latest</code>は、現時点での最新バージョンを指定できる<code>asdf</code>のヘルパーです。</p></div><h2 id="_6-バージョンをセット" tabindex="-1">6. バージョンをセット <a class="header-anchor" href="#_6-バージョンをセット" aria-label="Permalink to &quot;6. バージョンをセット&quot;">​</a></h2><p><code>asdf</code>は、カレントディレクトリから上位の<code>$HOME</code>ディレクトリまでに存在するすべての<code>.tool-versions</code>ファイルをもとに、ツールのバージョンを照会します。照会は、<code>asdf</code>で管理するツールを実行した際に、ジャストインタイムで行われます。</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>ツールで指定されたバージョンが見つからない場合、<strong>エラー</strong>が発生します。<code>asdf current</code>コマンドを実行すると、カレントディレクトリにおいてツールのバージョンを解決可能か確認できるため、どのツールが実行に失敗するか検証することができます。</p></div><p>asdfはまずカレントディレクトリにある <code>.tool-versions</code> ファイルを探し、見つからなければ親ディレクトリを参照し <code>.tool-versions</code> ファイルが見つかるまでファイルツリーの上位階層を探索します。<code>.tool-versions</code>ファイルが見つからない場合、バージョン解決処理は失敗し、エラーが表示されます。</p><p>すべてのディレクトリに適用されるデフォルトのバージョンを設定したい場合、<code>$HOME/.tool-versions</code>にバージョンを設定できます。特定のディレクトリで別のバージョンを設定しない限り、ホームディレクトリ以下のすべてのディレクトリに同じバージョンが設定されるようになります。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.5.0</span></span></code></pre></div><p><code>$HOME/.tool-versions</code>は次のようになります:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nodejs 16.5.0</span></span></code></pre></div><p>一部のOSでは、<code>python</code>のように、<code>asdf</code>ではなくシステムが管理するツールが既にインストールされていることがあります。それを使用する場合、<code>asdf</code>に対して、バージョン管理をシステムに委任するように指示する必要があります。詳しくは、<a href="/ja-jp/manage/versions.html">バージョンのリファレンス</a>をご覧ください。</p><p>asdfが最初にバージョンを探す場所は、現在の作業ディレクトリ（<code>$PWD/.tool-versions</code>）です。これはプロジェクトのソースコードやGitリポジトリを含むディレクトリです。目的のディレクトリで<code>asdf set</code>を実行すると、バージョンを設定することができます:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.5.0</span></span></code></pre></div><p><code>$PWD/.tool-versions</code>は次のようになります:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nodejs 16.5.0</span></span></code></pre></div><h3 id="ツールごとに用意された既存バージョンファイルの利用" tabindex="-1">ツールごとに用意された既存バージョンファイルの利用 <a class="header-anchor" href="#ツールごとに用意された既存バージョンファイルの利用" aria-label="Permalink to &quot;ツールごとに用意された既存バージョンファイルの利用&quot;">​</a></h3><p><code>asdf</code>は、他のバージョンマネージャ向けに作られた既存のバージョンファイル(例: <code>rbenv</code>の場合は<code>.ruby-version</code>ファイル)からの移行をサポートしています。これはプラグイン単位でのサポートです。</p><p><a href="https://github.com/asdf-vm/asdf-nodejs/" target="_blank" rel="noreferrer"><code>asdf-nodejs</code></a>であれば、<code>.nvmrc</code>ファイルと<code>.node-version</code>ファイルの両方に対応しています。このサポートを有効にするには、<code>asdf</code>の構成設定ファイルである<code>$HOME/.asdfrc</code>内に、下記の行を追記してください:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>legacy_version_file = yes</span></span></code></pre></div><p>構成設定でのその他のオプションについて詳しくは、<a href="/ja-jp/manage/configuration.html">構成設定</a>のリファレンスをご覧ください。</p><h2 id="入門完了" tabindex="-1">入門完了！ <a class="header-anchor" href="#入門完了" aria-label="Permalink to &quot;入門完了！&quot;">​</a></h2><p>以上で、<code>asdf</code>の入門は完了です🎉 ここまでで、プロジェクトでの<code>nodejs</code>のバージョン管理ができるようになりました。プロジェクトで使用するツールごとに、同様の手順を実施してください!</p><p><code>asdf</code>には使いこなすと便利なコマンドが他にもいっぱいあり、<code>asdf --help</code>コマンドまたは単に<code>asdf</code>コマンドを実行すれば、すべてのコマンドの説明を見ることができます。コマンドは大きく分けて3つのカテゴリに分けられます:</p><ul><li><a href="/ja-jp/manage/core.html"><code>asdf</code>のコア</a></li><li><a href="/ja-jp/manage/plugins.html">プラグイン</a></li><li><a href="/ja-jp/manage/versions.html">ツールのバージョン</a></li></ul>`,59)]))}const g=i(h,[["render",l]]);export{c as __pageData,g as default};
