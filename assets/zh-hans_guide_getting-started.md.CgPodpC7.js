import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.CkHWihve.js";const c=JSON.parse('{"title":"快速入门","description":"","frontmatter":{},"headers":[],"relativePath":"zh-hans/guide/getting-started.md","filePath":"zh-hans/guide/getting-started.md","lastUpdated":1755823056000}'),h={name:"zh-hans/guide/getting-started.md"};function l(n,s,p,d,k,o){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="快速入门" tabindex="-1">快速入门 <a class="header-anchor" href="#快速入门" aria-label="Permalink to &quot;快速入门&quot;">​</a></h1><h2 id="_1-安装-asdf" tabindex="-1">1. 安装 asdf <a class="header-anchor" href="#_1-安装-asdf" aria-label="Permalink to &quot;1. 安装 asdf&quot;">​</a></h2><p>asdf 的安装方式有以下几种：</p><details class="details custom-block"><summary>使用包管理器 - <strong>推荐</strong></summary><table tabindex="0"><thead><tr><th>包管理器</th><th>命令</th></tr></thead><tbody><tr><td>Homebrew</td><td><code>brew install asdf</code></td></tr><tr><td>Zypper</td><td><code>zypper install asdf</code></td></tr><tr><td>Pacman</td><td><code>git clone https://aur.archlinux.org/asdf-vm.git &amp;&amp; cd asdf-vm &amp;&amp; makepkg -si</code> 或者你希望使用 <a href="https://wiki.archlinux.org/index.php/AUR_helpers" target="_blank" rel="noreferrer">AUR helper</a></td></tr></tbody></table></details><details class="details custom-block"><summary>下载预编译二进制 - <strong>简单</strong></summary><h5 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h5><p>asdf 主要依赖 <code>git</code>。 这是一份 <em>非穷举</em> 的命令清单用于运行 <em>你的</em> 包管理器（有些可能在后面的步骤自动安装这些工具）。</p><table tabindex="0"><thead><tr><th>操作系统</th><th>包管理器</th><th>命令</th></tr></thead><tbody><tr><td>linux</td><td>Aptitude</td><td><code>apt install git bash</code></td></tr><tr><td>linux</td><td>DNF</td><td><code>dnf install git bash</code></td></tr><tr><td>linux</td><td>Pacman</td><td><code>pacman -S git bash</code></td></tr><tr><td>linux</td><td>Zypper</td><td><code>zypper install git bash</code></td></tr><tr><td>macOS</td><td>Homebrew</td><td><code>brew install coreutils git bash</code></td></tr><tr><td>macOS</td><td>Spack</td><td><code>spack install coreutils git bash</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">注意</p><p>取决于你的系统配置，可能会需要 <code>sudo</code>。</p></div><p>请查看 <a href="/zh-hans/manage/dependencies.html">依赖</a> 页面了解更多。</p><h5 id="安装-asdf" tabindex="-1">安装 asdf <a class="header-anchor" href="#安装-asdf" aria-label="Permalink to &quot;安装 asdf&quot;">​</a></h5><ol><li>访问 <a href="https://github.com/asdf-vm/asdf/releases" target="_blank" rel="noreferrer">https://github.com/asdf-vm/asdf/releases</a> 并下载与操作系统和架构匹配的压缩包。</li><li>从压缩包中解压 <code>asdf</code> 二进制文件到 <code>$PATH</code> 路径的某个文件夹.</li><li>运行 <code>type -a asdf</code> 来验证 <code>asdf</code> 是否已经在 <code>$PATH</code> 路径中。放置 <code>asdf</code> 二进制文件的目录应该包含在 <code>type</code> 命令的输出中。如果不在，那么意味着第 2 步不是完全正确。</li></ol></details><details class="details custom-block"><summary>使用 <code>go install</code></summary><h5 id="安装依赖-1" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖-1" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h5><p>asdf 主要依赖 <code>git</code>。 这是一份 <em>非穷举</em> 的命令清单用于运行 <em>你的</em> 包管理器（有些可能在后面的步骤自动安装这些工具）。</p><table tabindex="0"><thead><tr><th>操作系统</th><th>包管理器</th><th>命令</th></tr></thead><tbody><tr><td>linux</td><td>Aptitude</td><td><code>apt install git bash</code></td></tr><tr><td>linux</td><td>DNF</td><td><code>dnf install git bash</code></td></tr><tr><td>linux</td><td>Pacman</td><td><code>pacman -S git bash</code></td></tr><tr><td>linux</td><td>Zypper</td><td><code>zypper install git bash</code></td></tr><tr><td>macOS</td><td>Homebrew</td><td><code>brew install coreutils git bash</code></td></tr><tr><td>macOS</td><td>Spack</td><td><code>spack install coreutils git bash</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">注意</p><p>取决于你的系统配置，可能会需要 <code>sudo</code>。</p></div><p>请查看 <a href="/zh-hans/manage/dependencies.html">依赖</a> 页面了解更多。</p><h5 id="安装-asdf-1" tabindex="-1">安装 asdf <a class="header-anchor" href="#安装-asdf-1" aria-label="Permalink to &quot;安装 asdf&quot;">​</a></h5><ol><li><a href="https://go.dev/doc/install" target="_blank" rel="noreferrer">安装 Go</a></li><li>运行 <code>go install github.com/asdf-vm/asdf/cmd/asdf@v0.18.0</code></li></ol></details><details class="details custom-block"><summary>从源码构建</summary><h5 id="安装依赖-2" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖-2" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h5><p>asdf 主要依赖 <code>git</code>。 这是一份 <em>非穷举</em> 的命令清单用于运行 <em>你的</em> 包管理器（有些可能在后面的步骤自动安装这些工具）。</p><table tabindex="0"><thead><tr><th>操作系统</th><th>包管理器</th><th>命令</th></tr></thead><tbody><tr><td>linux</td><td>Aptitude</td><td><code>apt install git bash</code></td></tr><tr><td>linux</td><td>DNF</td><td><code>dnf install git bash</code></td></tr><tr><td>linux</td><td>Pacman</td><td><code>pacman -S git bash</code></td></tr><tr><td>linux</td><td>Zypper</td><td><code>zypper install git bash</code></td></tr><tr><td>macOS</td><td>Homebrew</td><td><code>brew install coreutils git bash</code></td></tr><tr><td>macOS</td><td>Spack</td><td><code>spack install coreutils git bash</code></td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">注意</p><p>取决于你的系统配置，可能会需要 <code>sudo</code>。</p></div><p>请查看 <a href="/zh-hans/manage/dependencies.html">依赖</a> 页面了解更多。</p><h5 id="安装-asdf-2" tabindex="-1">安装 asdf <a class="header-anchor" href="#安装-asdf-2" aria-label="Permalink to &quot;安装 asdf&quot;">​</a></h5><ol><li>克隆 asdf 仓库:</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/asdf-vm/asdf.git</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --branch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v0.18.0</span></span></code></pre></div><ol start="2"><li>运行 <code>make</code></li><li>复制 <code>asdf</code> 二进制文件到 <code>$PATH</code> 路径的某个文件夹.</li><li>运行 <code>type -a asdf</code> 来验证 <code>asdf</code> 是否已经在 <code>$PATH</code> 路径中。放置 <code>asdf</code> 二进制文件的目录应该包含在 <code>type</code> 命令的输出中。如果不在，那么意味着第 3 步不是完全正确。</li></ol></details><h2 id="_2-配置-asdf" tabindex="-1">2. 配置 asdf <a class="header-anchor" href="#_2-配置-asdf" aria-label="Permalink to &quot;2. 配置 asdf&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">注意</p><p>大部分用户 <strong>不</strong> 需要自定义 asdf 插件、安装包、垫片数据的位置。但是，如果 <code>$HOME/.asdf</code> 不是你想要 asdf 写入的目录，你可以修改它。请通过在 Shell 的 RC 文件中定义 <code>ASDF_DATA_DIR</code> 变量来指定你想要的目录。</p></div><p>根据 Shell 脚本、操作系统和安装方法的组合不同，相应的配置方式也会有所不同。展开以下与你的系统最匹配的选项。</p><p><strong>macOS 用户，请务必阅读本节最后关于 <code>path_helper</code> 的警告。</strong></p><details class="details custom-block"><summary>Bash</summary><p><strong>macOS Catalina 或者更新的版本</strong>： 默认的 shell 已经被修改为 <strong>ZSH</strong>。除非修改回 Bash, 否则请遵循 ZSH 的说明。</p><p><strong>Pacman</strong>： 补全功能需要安装 <a href="https://wiki.archlinux.org/title/bash#Common_programs_and_options" target="_blank" rel="noreferrer"><code>bash-completion</code></a>。</p><h5 id="将垫片目录添加到路径-必须" tabindex="-1">将垫片目录添加到路径（必须） <a class="header-anchor" href="#将垫片目录添加到路径-必须" aria-label="Permalink to &quot;将垫片目录添加到路径（必须）&quot;">​</a></h5><p>在 <code>~/.bash_profile</code> 文件中添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/shims:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h6 id="自定义数据目录-可选" tabindex="-1">自定义数据目录（可选） <a class="header-anchor" href="#自定义数据目录-可选" aria-label="Permalink to &quot;自定义数据目录（可选）&quot;">​</a></h6><p>在 <code>~/.bash_profile</code> 文件中上面一行声明之前添加以下变量声明：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div><h5 id="设置-shell-补全-可选" tabindex="-1">设置 shell 补全（可选） <a class="header-anchor" href="#设置-shell-补全-可选" aria-label="Permalink to &quot;设置 shell 补全（可选）&quot;">​</a></h5><p>在 <code>.bashrc</code> 文件中添加下面内容来配置补全功能：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion bash)</span></span></code></pre></div></details><details class="details custom-block"><summary>Fish</summary><h5 id="将垫片目录添加到路径-必须-1" tabindex="-1">将垫片目录添加到路径（必须） <a class="header-anchor" href="#将垫片目录添加到路径-必须-1" aria-label="Permalink to &quot;将垫片目录添加到路径（必须）&quot;">​</a></h5><p>在 <code>~/.config/fish/config.fish</code> 文件中添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ASDF configuration code</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> test</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -z</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ASDF_DATA_DIR</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _asdf_shims</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.asdf/shims&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _asdf_shims</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ASDF_DATA_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/shims&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Do not use fish_add_path (added in Fish 3.2) because it</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># potentially changes the order of items in PATH</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $_asdf_shims $PATH</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -gx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prepend</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $_asdf_shims</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --erase</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> _asdf_shims</span></span></code></pre></div><h6 id="自定义数据目录-可选-1" tabindex="-1">自定义数据目录（可选） <a class="header-anchor" href="#自定义数据目录-可选-1" aria-label="Permalink to &quot;自定义数据目录（可选）&quot;">​</a></h6><p><strong>Pacman</strong>: 补全功能会在 AUR 包安装时自动配置。</p><p>在 <code>~/.config/fish/config.fish</code> 文件中上面一行声明之前添加下面内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -gx</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --prepend</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ASDF_DATA_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/your/custom/data/dir&quot;</span></span></code></pre></div><h5 id="设置-shell-补全-可选-1" tabindex="-1">设置 shell 补全（可选） <a class="header-anchor" href="#设置-shell-补全-可选-1" aria-label="Permalink to &quot;设置 shell 补全（可选）&quot;">​</a></h5><p>必须通过以下命令手动配置补全功能：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/fish/completions/asdf.fish</span></span></code></pre></div></details><details class="details custom-block"><summary>Elvish</summary><h5 id="将垫片目录添加到路径-必须-2" tabindex="-1">将垫片目录添加到路径（必须） <a class="header-anchor" href="#将垫片目录添加到路径-必须-2" aria-label="Permalink to &quot;将垫片目录添加到路径（必须）&quot;">​</a></h5><p>在 <code>~/.config/elvish/rc.elv</code> 文件中添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">var</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~&#39;/.asdf&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">and</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (has-env </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ASDF_DATA_DIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:ASDF_DATA_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $E</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:ASDF_DATA_DIR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">not</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (has-value $paths $asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/shims&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> paths</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [$path $</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">@paths]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h6 id="自定义数据目录-可选-2" tabindex="-1">自定义数据目录（可选） <a class="header-anchor" href="#自定义数据目录-可选-2" aria-label="Permalink to &quot;自定义数据目录（可选）&quot;">​</a></h6><p>修改在上面片段之前的如下一行内容为自定义数据目录：</p><div class="language-diff vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;">-var asdf_data_dir = ~&#39;/.asdf&#39;</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">+var asdf_data_dir = &#39;/your/custom/data/dir&#39;</span></span></code></pre></div><h5 id="设置-shell-补全-可选-2" tabindex="-1">设置 shell 补全（可选） <a class="header-anchor" href="#设置-shell-补全-可选-2" aria-label="Permalink to &quot;设置 shell 补全（可选）&quot;">​</a></h5><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> elvish</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/elvish/rc.elv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\\n&quot;&#39;set edit:completion:arg-completer[asdf] = $_asdf:arg-completer~&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.config/elvish/rc.elv</span></span></code></pre></div></details><details class="details custom-block"><summary>ZSH</summary><p><strong>Pacman</strong>： 补全功能被放置在对 ZSH 友好的位置，但是 <a href="https://wiki.archlinux.org/index.php/zsh#Command_completion" target="_blank" rel="noreferrer">ZSH 必须配置使用自动补全</a>。</p><h5 id="将垫片目录添加到路径-必须-3" tabindex="-1">将垫片目录添加到路径（必须） <a class="header-anchor" href="#将垫片目录添加到路径-必须-3" aria-label="Permalink to &quot;将垫片目录添加到路径（必须）&quot;">​</a></h5><p>在 <code>~/.zshrc</code> 文件中添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/shims:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h6 id="自定义数据目录-可选-3" tabindex="-1">自定义数据目录（可选） <a class="header-anchor" href="#自定义数据目录-可选-3" aria-label="Permalink to &quot;自定义数据目录（可选）&quot;">​</a></h6><p>在 <code>~/.zshrc</code> 文件中上面一行声明之前添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div><h5 id="设置-shell-补全-可选-3" tabindex="-1">设置 shell 补全（可选） <a class="header-anchor" href="#设置-shell-补全-可选-3" aria-label="Permalink to &quot;设置 shell 补全（可选）&quot;">​</a></h5><p>补全功能可以通过 ZSH 框架的 <code>asdf</code> 插件 (类似 <a href="https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/asdf" target="_blank" rel="noreferrer">asdf for oh-my-zsh</a>) 或如下操作启用：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/completions&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/completions/_asdf&quot;</span></span></code></pre></div><p>然后在 <code>.zshrc</code> 文件中添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加补全功能到 fpath</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">fpath</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(\${ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.asdf}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/completions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $fpath)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 ZSH 的 compinit 初始化补全功能</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">autoload</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Uz</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compinit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">compinit</span></span></code></pre></div><p><strong>注意</strong></p><p>如果你正在 ZSH 框架中使用自定义的 <code>compinit</code> 设置 ，请确保 <code>compinit</code> 在框架加载之后加载。</p><p>补全功能可以通过 ZSH 框架 <code>asdf</code> 或者将需要 <a href="https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh" target="_blank" rel="noreferrer">按照 Homebrew 的说明进行配置</a>. 如果你正在使用 ZSH 框架，与 asdf 关联的插件或许需要更新以便通过 <code>fpath</code> 正确使用新 ZSH。 Oh-My-ZSH asdf 插件尚未更新，请查看 <a href="https://github.com/ohmyzsh/ohmyzsh/pull/8837" target="_blank" rel="noreferrer">ohmyzsh/ohmyzsh#8837</a> 了解更多。</p></details><details class="details custom-block"><summary>PowerShell Core</summary><h5 id="将垫片目录添加到路径-必须-4" tabindex="-1">将垫片目录添加到路径（必须） <a class="header-anchor" href="#将垫片目录添加到路径-必须-4" aria-label="Permalink to &quot;将垫片目录添加到路径（必须）&quot;">​</a></h5><p>在 <code>~/.config/powershell/profile.ps1</code> 文件中添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 确定垫片目录的位置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ($null -eq $ASDF_DATA_DIR -or $ASDF_DATA_DIR -eq </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $_asdf_shims </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/.asdf/shims&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  $_asdf_shims </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ASDF_DATA_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/shims&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 然后添加到 path 路径</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env:PATH = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">_asdf_shims</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}:\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">env</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}&quot;</span></span></code></pre></div><h6 id="自定义数据目录-可选-4" tabindex="-1">自定义数据目录（可选） <a class="header-anchor" href="#自定义数据目录-可选-4" aria-label="Permalink to &quot;自定义数据目录（可选）&quot;">​</a></h6><p>在 <code>~/.config/powershell/profile.ps1</code> 文件中上面片段之前添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env:ASDF_DATA_DIR = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div><p>Shell 补全功能不支持 PowerShell。</p></details><details class="details custom-block"><summary>Nushell</summary><h5 id="将垫片目录添加到路径-必须-5" tabindex="-1">将垫片目录添加到路径（必须） <a class="header-anchor" href="#将垫片目录添加到路径-必须-5" aria-label="Permalink to &quot;将垫片目录添加到路径（必须）&quot;">​</a></h5><p>在 <code>~/.config/nushell/config.nu</code> 文件中添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shims_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ( $env </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ignore-errors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> is-empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.asdf&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ASDF_DATA_DIR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;shims&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ( $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> split</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (char </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">esep</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> where</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $p </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">!=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $shims_dir </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> prepend</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $shims_dir )</span></span></code></pre></div><h6 id="自定义数据目录-可选-5" tabindex="-1">自定义数据目录（可选） <a class="header-anchor" href="#自定义数据目录-可选-5" aria-label="Permalink to &quot;自定义数据目录（可选）&quot;">​</a></h6><p>在 <code>~/.config/nushell/config.nu</code> 文件中上面内容之前添加下面变量声明：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env.ASDF_DATA_DIR = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div><h5 id="设置-shell-补全-可选-4" tabindex="-1">设置 shell 补全（可选） <a class="header-anchor" href="#设置-shell-补全-可选-4" aria-label="Permalink to &quot;设置 shell 补全（可选）&quot;">​</a></h5><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If you&#39;ve not customized the asdf data directory:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.HOME)/.asdf/completions&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nushell</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> save</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.HOME)/.asdf/completions/nushell.nu&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># If you have customized the data directory by setting ASDF_DATA_DIR:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ASDF_DATA_DIR)/completions&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> completion</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nushell</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> save</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> $&quot;(</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ASDF_DATA_DIR)/completions/nushell.nu&quot;</span></span></code></pre></div><p>然后在 <code>~/.config/nushell/config.nu</code> 文件中添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">let</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ( $env </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> get</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ignore-errors</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> is-empty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> path</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> join</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;.asdf&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $env</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.ASDF_DATA_DIR</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$asdf_data_dir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/completions/nushell.nu&quot;</span></span></code></pre></div></details><details class="details custom-block"><summary>POSIX Shell</summary><h5 id="将垫片目录添加到路径-必须-6" tabindex="-1">将垫片目录添加到路径（必须） <a class="header-anchor" href="#将垫片目录添加到路径-必须-6" aria-label="Permalink to &quot;将垫片目录添加到路径（必须）&quot;">​</a></h5><p>在 <code>~/.profile</code> 文件中添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}/shims:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span></code></pre></div><h6 id="自定义数据目录-可选-6" tabindex="-1">自定义数据目录（可选） <a class="header-anchor" href="#自定义数据目录-可选-6" aria-label="Permalink to &quot;自定义数据目录（可选）&quot;">​</a></h6><p>在 <code>~/.profile</code> 文件中上面一行内容之前添加以下内容：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ASDF_DATA_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/your/custom/data/dir&quot;</span></span></code></pre></div></details><p><code>asdf</code> 脚本需要在设置好的 <code>$PATH</code> <strong>之后</strong>和已经生效的框架（比如 oh-my-zsh 等等）<strong>之后</strong>的位置生效。</p><p>通常打开一个新的终端标签页来重启你的 shell 让 <code>PATH</code> 更改即时生效。</p><h2 id="核心安装完成" tabindex="-1">核心安装完成！ <a class="header-anchor" href="#核心安装完成" aria-label="Permalink to &quot;核心安装完成！&quot;">​</a></h2><p>这样就完成了 <code>asdf</code> 核心的安装 🎉</p><p><code>asdf</code> 仅在你安装<strong>插件</strong>、<strong>工具</strong>和管理它们的<strong>版本</strong>时才开始真正发挥作用。请继续阅读下面的指南来了解这些是如何做到的。</p><h2 id="_4-安装插件" tabindex="-1">4. 安装插件 <a class="header-anchor" href="#_4-安装插件" aria-label="Permalink to &quot;4. 安装插件&quot;">​</a></h2><p>出于演示目的，我们将通过 <a href="https://github.com/asdf-vm/asdf-nodejs/" target="_blank" rel="noreferrer"><code>asdf-nodejs</code></a> 插件来安装和设置 <a href="https://nodejs.org/" target="_blank" rel="noreferrer">Node.js</a>。</p><h3 id="插件依赖" tabindex="-1">插件依赖 <a class="header-anchor" href="#插件依赖" aria-label="Permalink to &quot;插件依赖&quot;">​</a></h3><p>每个插件都有依赖，所以我们需要确认应该列举了这些依赖的插件源码。对于 <code>asdf-nodejs</code> 来说，它们是：</p><table tabindex="0"><thead><tr><th>操作系统</th><th>安装依赖</th></tr></thead><tbody><tr><td>Debian</td><td><code>apt-get install dirmngr gpg curl gawk</code></td></tr><tr><td>CentOS/ Rocky Linux/ AlmaLinux</td><td><code>yum install gnupg2 curl gawk</code></td></tr><tr><td>macOS</td><td><code>brew install gpg gawk</code></td></tr></tbody></table><p>我们应该提前安装这些依赖，因为有些插件有 post-install 钩子。</p><h3 id="安装插件" tabindex="-1">安装插件 <a class="header-anchor" href="#安装插件" aria-label="Permalink to &quot;安装插件&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> plugin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/asdf-vm/asdf-nodejs.git</span></span></code></pre></div><h2 id="_5-安装指定版本" tabindex="-1">5. 安装指定版本 <a class="header-anchor" href="#_5-安装指定版本" aria-label="Permalink to &quot;5. 安装指定版本&quot;">​</a></h2><p>现在我们已经有了 Node.js 插件，所以我们可以开始安装某个版本了。</p><p>我们通过 <code>asdf list all nodejs</code> 可以看到所有可用的版本或者通过 <code>asdf list all nodejs 14</code> 查看版本子集。</p><p>我们将只安装最新可用的 <code>latest</code> 版本：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> latest</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">注意</p><p><code>asdf</code> 强制使用准确的版本。<code>latest</code> 是一个通过 <code>asdf</code> 来解析到执行时刻的实际版本号的辅助工具。</p></div><h2 id="_6-设置默认版本" tabindex="-1">6. 设置默认版本 <a class="header-anchor" href="#_6-设置默认版本" aria-label="Permalink to &quot;6. 设置默认版本&quot;">​</a></h2><p><code>asdf</code> 在从当前工作目录一直到 <code>$HOME</code> 目录的所有 <code>.tool-versions</code> 文件中进行工具的版本查找。查找在执行 <code>asdf</code> 管理的工具时实时发生。</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>如果没有为工具找到指定的版本，则会出现<strong>错误</strong>。<code>asdf current</code> 将显示当前目录中的工具和版本解析结果，或者不存在，以便你可以观察哪些工具将无法执行。</p></div><p>因为 asdf 会在当前目录寻找 <code>.tool-versions</code> 文件，如果没有找到将会继续逐层向上在父目录寻找 <code>.tool-versions</code> 文件直到找到。如果在父目录也没有找到 <code>.tool-versions</code> 文件，版本解析进程将会失败并且打印错误。</p><p>如果你想要设置一个默认版本用来应用在你工作的所有目录，你可以在 <code>$HOME/.tool-versions</code> 文件中定义版本。任何在家目录下的子目录都会被解析为同样的版本，除非子目录中设置了另外一个版本。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.5.0</span></span></code></pre></div><p><code>$HOME/.tool-versions</code> 文件内容将会变成：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nodejs 16.5.0</span></span></code></pre></div><p>某些操作系统已经有一些由系统而非 <code>asdf</code> 安装和管理的工具了，<code>python</code> 就是一个常见的例子。你需要告诉 <code>asdf</code> 将管理权还给系统。<a href="/zh-hans/manage/versions.html">版本</a> 参考页面将会引导你。</p><p>asdf 首先从当前工作目录的 <code>$PWD/.tool-versions</code> 文件中寻找版本。这可能是一个包含源代码或某个项目 Git 存储库的目录。当在你想要的目录执行时，你可以用 <code>asdf set</code> 来设置版本：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">asdf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nodejs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 16.5.0</span></span></code></pre></div><p><code>$PWD/.tool-versions</code> 文件内容将会变成：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>nodejs 16.5.0</span></span></code></pre></div><h3 id="使用现有工具版本文件" tabindex="-1">使用现有工具版本文件 <a class="header-anchor" href="#使用现有工具版本文件" aria-label="Permalink to &quot;使用现有工具版本文件&quot;">​</a></h3><p><code>asdf</code> 支持从其他版本管理器的现有版本文件中迁移过来，比如 <code>rbenv</code> 的 <code>.ruby-version</code> 文件。这在每个插件中都原生支持。</p><p><a href="https://github.com/asdf-vm/asdf-nodejs/" target="_blank" rel="noreferrer"><code>asdf-nodejs</code></a> 支持从 <code>.nvmrc</code> 和 <code>.node-version</code> 文件进行迁移。为了启用此功能，请在 <code>asdf</code> 配置文件 <code>$HOME/.asdfrc</code> 中添加以下内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>legacy_version_file = yes</span></span></code></pre></div><p>查看 <a href="/zh-hans/manage/configuration.html">配置</a> 参考页面可以了解更多配置选项。</p><h2 id="完成指南" tabindex="-1">完成指南！ <a class="header-anchor" href="#完成指南" aria-label="Permalink to &quot;完成指南！&quot;">​</a></h2><p>恭喜你完成了 <code>asdf</code> 的快速上手 🎉 你现在可以管理你的项目的 <code>nodejs</code> 版本了。对于项目中的其他工具类型可以执行类似步骤即可！</p><p><code>asdf</code> 还有更多命令需要熟悉，你可以通过运行 <code>asdf --help</code> 或者 <code>asdf</code> 来查看它们。命令主要分为三类：</p><ul><li><a href="/zh-hans/manage/core.html"><code>asdf</code> 核心</a></li><li><a href="/zh-hans/manage/plugins.html">插件</a></li><li><a href="/zh-hans/manage/versions.html">（工具的）版本</a></li></ul>`,59)]))}const g=i(h,[["render",l]]);export{c as __pageData,g as default};
